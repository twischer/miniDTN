!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ADMINISTRATIVE_RECORD_H	administrative_record.h	20;"	d
ADMIN_FLAGS_IS_FOR_FRAGMENT	administrative_record.h	34;"	d
ADMIN_RECORD_PRIMARY_PCF	administrative_record.h	36;"	d
AGENT_H	agent.h	24;"	d
API_H	api.h	20;"	d
APP_ACTIVE	api.h	58;"	d
APP_DATA_LEN	bundle.h	50;"	d
APP_PASSIVE	api.h	62;"	d
BLACKLIST_SIZE	routing_flooding.c	44;"	d	file:
BLACKLIST_THRESHOLD	routing_flooding.c	43;"	d	file:
BLACKLIST_TIMEOUT	routing_flooding.c	42;"	d	file:
BLOCK_UNINTELLIGIBLE	custody_signal.h	29;"	d
BLOCK_UNINTELLIGIBLE	statusreport.h	63;"	d
BUFFER_LENGTH	eid.c	23;"	d	file:
BUFFER_LENGTH	statusreport_basic.c	32;"	d	file:
BUNDLE_BLOCK_FLAG_DEL	bundle.h	99;"	d
BUNDLE_BLOCK_FLAG_DISC	bundle.h	101;"	d
BUNDLE_BLOCK_FLAG_EID	bundle.h	103;"	d
BUNDLE_BLOCK_FLAG_LAST	bundle.h	100;"	d
BUNDLE_BLOCK_FLAG_NOTPR	bundle.h	102;"	d
BUNDLE_BLOCK_FLAG_NULL	bundle.h	96;"	d
BUNDLE_BLOCK_FLAG_REPL	bundle.h	97;"	d
BUNDLE_BLOCK_FLAG_STAT	bundle.h	98;"	d
BUNDLE_BLOCK_TYPE_PAYLOAD	bundle.h	53;"	d
BUNDLE_FLAG_ACK_REQ	bundle.h	73;"	d
BUNDLE_FLAG_ADM_REC	bundle.h	69;"	d
BUNDLE_FLAG_CUST_REQ	bundle.h	71;"	d
BUNDLE_FLAG_DONT_FRAG	bundle.h	70;"	d
BUNDLE_FLAG_FRAGMENT	bundle.h	68;"	d
BUNDLE_FLAG_PRIOH	bundle.h	76;"	d
BUNDLE_FLAG_PRIOL	bundle.h	75;"	d
BUNDLE_FLAG_REPORT	bundle.h	85;"	d
BUNDLE_FLAG_REP_CUST	bundle.h	79;"	d
BUNDLE_FLAG_REP_DELETE	bundle.h	82;"	d
BUNDLE_FLAG_REP_DELIV	bundle.h	81;"	d
BUNDLE_FLAG_REP_FWD	bundle.h	80;"	d
BUNDLE_FLAG_REP_RECV	bundle.h	78;"	d
BUNDLE_FLAG_SINGLETON	bundle.h	72;"	d
BUNDLE_NUM	bundleslot.c	25;"	d	file:
BUNDLE_NUM	bundleslot.c	27;"	d	file:
BUNDLE_PRIORITY_BULK	bundle.h	88;"	d
BUNDLE_PRIORITY_EXPEDITED	bundle.h	90;"	d
BUNDLE_PRIORITY_MASK	bundle.h	93;"	d
BUNDLE_PRIORITY_NORMAL	bundle.h	89;"	d
BUNDLE_PRIORITY_RESERVED	bundle.h	91;"	d
BUNDLE_STORAGE	storage.h	34;"	d
BUNDLE_STORAGE	storage.h	36;"	d
BUNDLE_STORAGE_BEHAVIOUR	storage.h	69;"	d
BUNDLE_STORAGE_BEHAVIOUR	storage.h	71;"	d
BUNDLE_STORAGE_BEHAVIOUR_DELETE_OLDER	storage.h	62;"	d
BUNDLE_STORAGE_BEHAVIOUR_DELETE_OLDEST	storage.h	65;"	d
BUNDLE_STORAGE_BEHAVIOUR_DELETE_YOUNGER	storage.h	63;"	d
BUNDLE_STORAGE_BEHAVIOUR_DELETE_YOUNGEST	storage.h	66;"	d
BUNDLE_STORAGE_BEHAVIOUR_DO_NOT_DELETE	storage.h	64;"	d
BUNDLE_STORAGE_INIT	storage.h	53;"	d
BUNDLE_STORAGE_INIT	storage.h	55;"	d
BUNDLE_STORAGE_SIZE	storage.h	43;"	d
BUNDLE_STORAGE_SIZE	storage.h	45;"	d
CONVERGENCE_LAYER_COMPAT	convergence_layer.h	76;"	d
CONVERGENCE_LAYER_FAILED_RETRIES	convergence_layer.h	45;"	d
CONVERGENCE_LAYER_FLAGS_FIRST	convergence_layer.h	89;"	d
CONVERGENCE_LAYER_FLAGS_LAST	convergence_layer.h	90;"	d
CONVERGENCE_LAYER_H	convergence_layer.h	20;"	d
CONVERGENCE_LAYER_MASK_COMPAT	convergence_layer.h	95;"	d
CONVERGENCE_LAYER_MASK_FLAGS	convergence_layer.h	98;"	d
CONVERGENCE_LAYER_MASK_SEQNO	convergence_layer.h	97;"	d
CONVERGENCE_LAYER_MASK_TYPE	convergence_layer.h	96;"	d
CONVERGENCE_LAYER_MAX_LENGTH	convergence_layer.h	119;"	d
CONVERGENCE_LAYER_PRIORITY_HIGH	convergence_layer.h	112;"	d
CONVERGENCE_LAYER_PRIORITY_NORMAL	convergence_layer.h	111;"	d
CONVERGENCE_LAYER_QUEUE	convergence_layer.h	30;"	d
CONVERGENCE_LAYER_QUEUE_ACK	convergence_layer.h	70;"	d
CONVERGENCE_LAYER_QUEUE_ACK_PEND	convergence_layer.h	67;"	d
CONVERGENCE_LAYER_QUEUE_ACTIVE	convergence_layer.h	65;"	d
CONVERGENCE_LAYER_QUEUE_DONE	convergence_layer.h	68;"	d
CONVERGENCE_LAYER_QUEUE_FAIL	convergence_layer.h	69;"	d
CONVERGENCE_LAYER_QUEUE_FREE	convergence_layer.h	35;"	d
CONVERGENCE_LAYER_QUEUE_IN_TRANSIT	convergence_layer.h	66;"	d
CONVERGENCE_LAYER_QUEUE_NACK	convergence_layer.h	71;"	d
CONVERGENCE_LAYER_RETRANSMIT_TIMEOUT	convergence_layer.h	55;"	d
CONVERGENCE_LAYER_RETRANSMIT_TRIES	convergence_layer.h	60;"	d
CONVERGENCE_LAYER_RETRIES	convergence_layer.h	40;"	d
CONVERGENCE_LAYER_STATUS_FATAL	convergence_layer.h	106;"	d
CONVERGENCE_LAYER_STATUS_NOACK	convergence_layer.h	104;"	d
CONVERGENCE_LAYER_STATUS_NOSEND	convergence_layer.h	105;"	d
CONVERGENCE_LAYER_STATUS_OK	convergence_layer.h	103;"	d
CONVERGENCE_LAYER_TIMEOUT	convergence_layer.h	50;"	d
CONVERGENCE_LAYER_TYPE_ACK	convergence_layer.h	83;"	d
CONVERGENCE_LAYER_TYPE_DATA	convergence_layer.h	81;"	d
CONVERGENCE_LAYER_TYPE_DISCOVERY	convergence_layer.h	82;"	d
CONVERGENCE_LAYER_TYPE_NACK	convergence_layer.h	84;"	d
CONVERGENCE_LAYER_VALID_FLAG	convergence_layer.h	114;"	d
CUSTODY	custody.h	28;"	d
CUSTODY	custody.h	30;"	d
CUSTODY_SIGNAL_H	custody_signal.h	13;"	d
CUSTODY_TRANSFER_FAILED	custody_signal.h	22;"	d
CUSTODY_TRANSFER_SUCCEEDED	custody_signal.h	21;"	d
CUST_NODE	bundle.h	43;"	d
CUST_SERV	bundle.h	44;"	d
DATA	bundle.h	106;"	d
DEBUG_H	bundle.h	109;"	d
DELIVERY_H	delivery.h	14;"	d
DELIVERY_STATE_BUSY	delivery.h	22;"	d
DELIVERY_STATE_DELETE	delivery.h	21;"	d
DELIVERY_STATE_ERROR	delivery.h	19;"	d
DELIVERY_STATE_WAIT_FOR_APP	delivery.h	20;"	d
DEPLETED_STORAGE	custody_signal.h	25;"	d
DEPLETED_STORAGE	statusreport.h	59;"	d
DEST_EID_UNINTELLIGIBLE	custody_signal.h	26;"	d
DEST_EID_UNINTELLIGIBLE	statusreport.h	60;"	d
DEST_NODE	bundle.h	37;"	d
DEST_SERV	bundle.h	38;"	d
DIRECTORY_LEN	bundle.h	48;"	d
DISCOVERY	discovery.h	29;"	d
DISCOVERY	discovery.h	31;"	d
DISCOVERY_CYCLE	discovery_basic.c	39;"	d	file:
DISCOVERY_CYCLE	discovery_ipnd.c	42;"	d	file:
DISCOVERY_H	discovery.h	19;"	d
DISCOVERY_IPND_BUFFER_LEN	discovery_ipnd.c	45;"	d	file:
DISCOVERY_IPND_SERVICE	discovery_ipnd.c	44;"	d	file:
DISCOVERY_IPND_WHITELIST	discovery_ipnd.c	46;"	d	file:
DISCOVERY_NEIGHBOUR_CACHE	discovery_basic.c	37;"	d	file:
DISCOVERY_NEIGHBOUR_CACHE	discovery_ipnd.c	41;"	d	file:
DISCOVERY_NEIGHBOUR_TIMEOUT	discovery_basic.c	38;"	d	file:
DISCOVERY_NEIGHBOUR_TIMEOUT	discovery_ipnd.c	43;"	d	file:
DISCOVERY_TRIES	discovery_basic.c	40;"	d	file:
DISPATCHING_H	dispatching.h	13;"	d
DTN_NETWORK_H	dtn_network.h	18;"	d
FLAGS	bundle.h	35;"	d
FLOOD_ROUTE_RETURN_CONTINUE	routing_flooding.c	50;"	d	file:
FLOOD_ROUTE_RETURN_FAIL	routing_flooding.c	51;"	d	file:
FLOOD_ROUTE_RETURN_OK	routing_flooding.c	49;"	d	file:
FORWARDED_OVER_UNIDIRECTIONAL_LINK	statusreport.h	57;"	d
FRAG_OFFSET	bundle.h	49;"	d
HASH	hash.h	27;"	d
HASH	hash.h	29;"	d
HASH_H	hash.h	19;"	d
INIT_GUARD	bundleslot.c	30;"	d	file:
IPND_FLAGS_BLOOMFILTER	discovery_ipnd.c	51;"	d	file:
IPND_FLAGS_SERVICE_BLOCK	discovery_ipnd.c	50;"	d	file:
IPND_FLAGS_SOURCE_EID	discovery_ipnd.c	49;"	d	file:
LENGTH	bundle.h	36;"	d
LIFETIME_EXPIRED	statusreport.h	56;"	d
LIFE_TIME	bundle.h	47;"	d
LOGLEVEL	dtn_network.c	15;"	d	file:
LOGLEVEL	dtn_network.c	17;"	d	file:
LOG_AGENT	agent.h	66;"	d
LOG_BUNDLE	agent.h	61;"	d
LOG_CL	agent.h	67;"	d
LOG_DISCOVERY	agent.h	68;"	d
LOG_NET	agent.h	60;"	d
LOG_ROUTE	agent.h	62;"	d
LOG_SDNV	agent.h	64;"	d
LOG_SLOTS	agent.h	65;"	d
LOG_STORE	agent.h	63;"	d
MAX_CUST	custody_basic.c	33;"	d	file:
MAX_LENGTH	sdnv.c	22;"	d	file:
MAX_REGISTRATIONS	registration.c	26;"	d	file:
MAX_REGISTRATIONS	registration.c	28;"	d	file:
NODE_ACCEPTED_CUSTODY	statusreport.h	43;"	d
NODE_DELETED_BUNDLE	statusreport.h	46;"	d
NODE_DELIVERED_BUNDLE	statusreport.h	45;"	d
NODE_FORWARDED_BUNDLE	statusreport.h	44;"	d
NODE_RECEIVED_BUNDLE	statusreport.h	42;"	d
NO_ADDITIONAL_INFORMATION	custody_signal.h	23;"	d
NO_ADDITIONAL_INFORMATION	statusreport.h	55;"	d
NO_KNOWN_ROUTE_TO_DEST	custody_signal.h	27;"	d
NO_KNOWN_ROUTE_TO_DEST	statusreport.h	61;"	d
NO_TIMELY_CONTACT_WITH_NEXT_NODE	custody_signal.h	28;"	d
NO_TIMELY_CONTACT_WITH_NEXT_NODE	statusreport.h	62;"	d
PRIME1	hash_xxfast.c	58;"	d	file:
PRIME2	hash_xxfast.c	59;"	d	file:
PRIME3	hash_xxfast.c	60;"	d	file:
PRIME4	hash_xxfast.c	61;"	d	file:
PRIME5	hash_xxfast.c	62;"	d	file:
PROCESS_THREAD	agent.c	/^PROCESS_THREAD(agent_process, ev, data)$/;"	f
PROCESS_THREAD	convergence_layer.c	/^PROCESS_THREAD(convergence_layer_process, ev, data)$/;"	f
PROCESS_THREAD	discovery_basic.c	/^PROCESS_THREAD(discovery_process, ev, data)$/;"	f
PROCESS_THREAD	discovery_ipnd.c	/^PROCESS_THREAD(discovery_process, ev, data)$/;"	f
PROCESS_THREAD	routing_flooding.c	/^PROCESS_THREAD(routing_process, ev, data)$/;"	f
RADIO_SAFE_STATE_OFF	storage_coffee.c	95;"	d	file:
RADIO_SAFE_STATE_ON	storage_coffee.c	94;"	d	file:
REASON_BLOCK_UNINTELLIGBLE	bundle.h	64;"	d
REASON_DELIVERED	bundle.h	65;"	d
REASON_DEPLETED_STORAGE	bundle.h	60;"	d
REASON_DEST_EID_UNINTELLIGBLE	bundle.h	61;"	d
REASON_LIFETIME_EXPIRED	bundle.h	57;"	d
REASON_NO_INFORMATION	bundle.h	56;"	d
REASON_NO_ROUTE	bundle.h	62;"	d
REASON_NO_TIMELY_CONTACT	bundle.h	63;"	d
REASON_TRANSMISSION_CANCELED	bundle.h	59;"	d
REASON_UNIDIRECTIONAL_LINK	bundle.h	58;"	d
REDUNDANCE	redundancy.h	32;"	d
REDUNDANCE	redundancy.h	34;"	d
REDUNDANCE_LIMIT	redundancy_bloomfilter.c	50;"	d	file:
REDUNDANCE_LIMIT	redundancy_bloomfilter.c	52;"	d	file:
REDUNDANCE_MAX	redundancy.h	40;"	d
REDUNDANCE_NUMBER	redundancy_bloomfilter.c	41;"	d	file:
REDUNDANCE_NUMBER	redundancy_bloomfilter.c	43;"	d	file:
REDUNDANCE_PER_FILTER	redundancy_bloomfilter.c	55;"	d	file:
REDUNDANCE_SIZE	redundancy_bloomfilter.c	32;"	d	file:
REDUNDANCE_SIZE	redundancy_bloomfilter.c	34;"	d	file:
REDUNDANT_RECEPTION	custody_signal.h	24;"	d
REGISTRATION_H	registration.h	14;"	d
REP_NODE	bundle.h	41;"	d
REP_SERV	bundle.h	42;"	d
RETRANSMIT	custody_basic.c	32;"	d	file:
ROUTING	routing.h	37;"	d
ROUTING	routing.h	39;"	d
ROUTING_FLAG_FORWARD	routing.h	53;"	d
ROUTING_FLAG_IN_DELIVERY	routing.h	51;"	d
ROUTING_FLAG_IN_TRANSIT	routing.h	54;"	d
ROUTING_FLAG_LOCAL	routing.h	52;"	d
ROUTING_NEI_MEM	routing.h	46;"	d
ROUTING_STATUS_ERROR	routing.h	62;"	d
ROUTING_STATUS_FAIL	routing.h	60;"	d
ROUTING_STATUS_NACK	routing.h	61;"	d
ROUTING_STATUS_OK	routing.h	59;"	d
SRC_NODE	bundle.h	39;"	d
SRC_SERV	bundle.h	40;"	d
STATISTICS_CONTACTS	statistics.h	33;"	d
STATISTICS_CONTACTS	statistics.h	35;"	d
STATISTICS_ELEMENTS	statistics.h	20;"	d
STATISTICS_ELEMENTS	statistics.h	22;"	d
STATISTICS_H	statistics.h	14;"	d
STATISTICS_PERIOD	statistics.h	26;"	d
STATISTICS_PERIOD	statistics.h	28;"	d
STATUSREPORT	statusreport.h	31;"	d
STATUSREPORT	statusreport.h	33;"	d
STATUS_REPORT_H	statusreport.h	18;"	d
STORAGE_COFFEE_FLAGS_LOCKED	storage_coffee.c	70;"	d	file:
STORAGE_FILE_NAME_LENGTH	storage_coffee.c	43;"	d	file:
STORAGE_MMEM_FLAGS_LOCKED	storage_mmem.c	67;"	d	file:
TIME_STAMP	bundle.h	45;"	d
TIME_STAMP_SEQ_NR	bundle.h	46;"	d
TRANSMISSION_CANCELED	statusreport.h	58;"	d
TYPE_CODE_BUNDLE_STATUS_REPORT	administrative_record.h	28;"	d
TYPE_CODE_CUSTODY_SIGNAL	administrative_record.h	29;"	d
VERSION	bundle.h	34;"	d
__BUNDLESLOT_H__	bundleslot.h	14;"	d
__BUNDLE_H__	bundle.h	30;"	d
__CUSTODY_H__	custody.h	19;"	d
__EID_H__	eid.h	24;"	d
__REDUNDANCE_H__	redundancy.h	19;"	d
__ROUTING_H__	routing.h	20;"	d
__SDNV_H__	sdnv.h	19;"	d
__STORAGE_H__	storage.h	19;"	d
__anon1::__anon2::custody_signal	administrative_record.h	/^		custody_signal_t custody_signal; \/** Custody Signal Struct *\/$/;"	m	union:__anon1::__anon2	access:public
__anon1::__anon2::status_report	administrative_record.h	/^		status_report_t status_report; $/;"	m	union:__anon1::__anon2	access:public
__anon1::record_status	administrative_record.h	/^	uint8_t record_status; 		\/** 8 bit, 4 bit Record Type Code, 4 bit Record Flags *\/$/;"	m	struct:__anon1	access:public
__anon3::bundle_creation_timestamp	custody_signal.h	/^	uint32_t bundle_creation_timestamp;$/;"	m	struct:__anon3	access:public
__anon3::bundle_creation_timestamp_seq	custody_signal.h	/^	uint32_t bundle_creation_timestamp_seq;$/;"	m	struct:__anon3	access:public
__anon3::custody_signal_time	custody_signal.h	/^	uint32_t custody_signal_time;$/;"	m	struct:__anon3	access:public
__anon3::fragement_offset	custody_signal.h	/^	uint32_t fragement_offset;$/;"	m	struct:__anon3	access:public
__anon3::fragment_length	custody_signal.h	/^	uint32_t fragment_length;$/;"	m	struct:__anon3	access:public
__anon3::src_app	custody_signal.h	/^	uint32_t src_app;$/;"	m	struct:__anon3	access:public
__anon3::src_node	custody_signal.h	/^	uint32_t src_node;$/;"	m	struct:__anon3	access:public
__anon3::status	custody_signal.h	/^	uint8_t status; $/;"	m	struct:__anon3	access:public
__anon4::bundle_creation_timestamp	statusreport.h	/^	uint32_t bundle_creation_timestamp;$/;"	m	struct:__anon4	access:public
__anon4::bundle_sequence_number	statusreport.h	/^	uint32_t bundle_sequence_number;$/;"	m	struct:__anon4	access:public
__anon4::dtn_time_nanoseconds	statusreport.h	/^	uint32_t dtn_time_nanoseconds;$/;"	m	struct:__anon4	access:public
__anon4::dtn_time_seconds	statusreport.h	/^	uint32_t dtn_time_seconds;$/;"	m	struct:__anon4	access:public
__anon4::fragment	statusreport.h	/^	uint8_t fragment;$/;"	m	struct:__anon4	access:public
__anon4::fragment_length	statusreport.h	/^	uint32_t fragment_length;$/;"	m	struct:__anon4	access:public
__anon4::fragment_offset	statusreport.h	/^	uint32_t fragment_offset;$/;"	m	struct:__anon4	access:public
__anon4::reason_code	statusreport.h	/^	uint8_t reason_code;$/;"	m	struct:__anon4	access:public
__anon4::source_eid_node	statusreport.h	/^	uint32_t source_eid_node;$/;"	m	struct:__anon4	access:public
__anon4::source_eid_service	statusreport.h	/^	uint32_t source_eid_service;$/;"	m	struct:__anon4	access:public
__anon4::status_flags	statusreport.h	/^	uint8_t status_flags;$/;"	m	struct:__anon4	access:public
_rotl	hash_xxfast.c	56;"	d	file:
active	discovery_basic.c	/^	uint8_t active;$/;"	m	struct:discovery_basic_neighbour_list_entry	file:	access:public
active	discovery_ipnd.c	/^	uint8_t active;$/;"	m	struct:discovery_basic_neighbour_list_entry	file:	access:public
administrative_record_block_t	administrative_record.h	/^} administrative_record_block_t;$/;"	t	typeref:struct:__anon1
agent_delete_bundle	agent.c	/^void agent_delete_bundle(uint32_t bundle_number){$/;"	f	signature:(uint32_t bundle_number)
agent_delete_bundle	agent.h	/^void agent_delete_bundle(uint32_t bundle_number);$/;"	p	signature:(uint32_t bundle_number)
agent_init	agent.c	/^void agent_init(void) {$/;"	f	signature:(void)
agent_init	agent.h	/^void agent_init(void);$/;"	p	signature:(void)
agent_process	agent.c	/^AUTOSTART_PROCESSES(&agent_process);$/;"	v
agent_process	agent.h	/^PROCESS_NAME(agent_process);$/;"	v
alive	discovery.h	/^	void (* alive)(rimeaddr_t * source);$/;"	m	struct:discovery_driver	access:public
app_id	api.h	/^	uint32_t app_id;$/;"	m	struct:registration_api	access:public
app_id	registration.h	/^	uint32_t app_id;$/;"	m	struct:registration	access:public
app_len	bundle.h	/^	uint32_t app_len;$/;"	m	struct:bundle_t	access:public
application_process	api.h	/^	struct process *application_process;$/;"	m	struct:registration_api	typeref:struct:registration_api::process	access:public
application_process	registration.h	/^	struct process * application_process;$/;"	m	struct:registration	typeref:struct:registration::process	access:public
b_dis_start_pending	discovery_basic.c	/^void b_dis_start_pending()$/;"	f
blacklist_entry_t	routing_flooding.c	/^struct blacklist_entry_t {$/;"	s	file:
blacklist_entry_t::counter	routing_flooding.c	/^	uint8_t counter;$/;"	m	struct:blacklist_entry_t	file:	access:public
blacklist_entry_t::next	routing_flooding.c	/^	struct blacklist_entry_t * next;$/;"	m	struct:blacklist_entry_t	typeref:struct:blacklist_entry_t::blacklist_entry_t	file:	access:public
blacklist_entry_t::node	routing_flooding.c	/^	rimeaddr_t node;$/;"	m	struct:blacklist_entry_t	file:	access:public
blacklist_entry_t::timestamp	routing_flooding.c	/^	clock_time_t timestamp;$/;"	m	struct:blacklist_entry_t	file:	access:public
blacklist_list	routing_flooding.c	/^LIST(blacklist_list);$/;"	v
block_data	bundle.h	/^	uint8_t block_data[];$/;"	m	struct:bundle_t	access:public
block_size	bundle.h	/^	uint8_t block_size;$/;"	m	struct:bundle_block_t	access:public
blocked_neighbour_list	convergence_layer.c	/^LIST(blocked_neighbour_list);$/;"	v
blocked_neighbour_t	convergence_layer.c	/^struct blocked_neighbour_t {$/;"	s	file:
blocked_neighbour_t::neighbour	convergence_layer.c	/^	rimeaddr_t neighbour;$/;"	m	struct:blocked_neighbour_t	file:	access:public
blocked_neighbour_t::next	convergence_layer.c	/^	struct blocked_neighbour_t * next;$/;"	m	struct:blocked_neighbour_t	typeref:struct:blocked_neighbour_t::blocked_neighbour_t	file:	access:public
blocked_neighbour_t::timestamp	convergence_layer.c	/^	clock_time_t timestamp;$/;"	m	struct:blocked_neighbour_t	file:	access:public
bloomfilter_clear	redundancy_bloomfilter.c	/^void bloomfilter_clear(uint8_t filter) {$/;"	f	signature:(uint8_t filter)
bloomfilter_get	redundancy_bloomfilter.c	/^uint8_t bloomfilter_get(uint32_t bit, uint8_t filter) {$/;"	f	signature:(uint32_t bit, uint8_t filter)
bloomfilter_get_length	redundancy_bloomfilter.c	/^uint32_t bloomfilter_get_length() {$/;"	f
bloomfilter_get_start	redundancy_bloomfilter.c	/^char * bloomfilter_get_start(uint8_t filter) {$/;"	f	signature:(uint8_t filter)
bloomfilter_set	redundancy_bloomfilter.c	/^void bloomfilter_set(uint32_t bit, uint8_t filter) {$/;"	f	signature:(uint32_t bit, uint8_t filter)
bundle	bundleslot.h	/^	struct mmem bundle;$/;"	m	struct:bundle_slot_t	typeref:struct:bundle_slot_t::mmem	access:public
bundle	convergence_layer.h	/^	struct mmem * bundle;$/;"	m	struct:transmit_ticket_t	typeref:struct:transmit_ticket_t::mmem	access:public
bundle	storage_mmem.c	/^	struct mmem *bundle;$/;"	m	struct:bundle_list_entry_t	typeref:struct:bundle_list_entry_t::mmem	file:	access:public
bundle_add_block	bundle.c	/^int bundle_add_block(struct mmem *bundlemem, uint8_t type, uint8_t flags, uint8_t *data, uint8_t d_len)$/;"	f	signature:(struct mmem *bundlemem, uint8_t type, uint8_t flags, uint8_t *data, uint8_t d_len)
bundle_add_block	bundle.h	/^int bundle_add_block(struct mmem * bundlemem, uint8_t type, uint8_t flags, uint8_t * data, uint8_t d_len);$/;"	p	signature:(struct mmem * bundlemem, uint8_t type, uint8_t flags, uint8_t * data, uint8_t d_len)
bundle_block_t	bundle.h	/^struct bundle_block_t {$/;"	s
bundle_block_t::block_size	bundle.h	/^	uint8_t block_size;$/;"	m	struct:bundle_block_t	access:public
bundle_block_t::flags	bundle.h	/^	uint32_t flags;$/;"	m	struct:bundle_block_t	access:public
bundle_block_t::payload	bundle.h	/^	uint8_t payload[];$/;"	m	struct:bundle_block_t	access:public
bundle_block_t::type	bundle.h	/^	uint8_t type;$/;"	m	struct:bundle_block_t	access:public
bundle_create_bundle	bundle.c	/^struct mmem * bundle_create_bundle()$/;"	f
bundle_create_bundle	bundle.h	/^struct mmem * bundle_create_bundle();$/;"	p	signature:()
bundle_creation_timestamp	custody_signal.h	/^	uint32_t bundle_creation_timestamp;$/;"	m	struct:__anon3	access:public
bundle_creation_timestamp	statusreport.h	/^	uint32_t bundle_creation_timestamp;$/;"	m	struct:__anon4	access:public
bundle_creation_timestamp_seq	custody_signal.h	/^	uint32_t bundle_creation_timestamp_seq;$/;"	m	struct:__anon3	access:public
bundle_decode_block	bundle.c	/^static uint8_t bundle_decode_block(struct mmem *bundlemem, uint8_t *buffer, int max_len)$/;"	f	file:	signature:(struct mmem *bundlemem, uint8_t *buffer, int max_len)
bundle_decode_block	bundle.c	/^static uint8_t bundle_decode_block(struct mmem *bundlemem, uint8_t *buffer, int max_len);$/;"	p	file:	signature:(struct mmem *bundlemem, uint8_t *buffer, int max_len)
bundle_decrement	bundle.c	/^int bundle_decrement(struct mmem *bundlemem)$/;"	f	signature:(struct mmem *bundlemem)
bundle_decrement	bundle.h	/^int bundle_decrement(struct mmem *bundlemem);$/;"	p	signature:(struct mmem *bundlemem)
bundle_delete_bundle	bundle.c	/^uint16_t bundle_delete_bundle(struct mmem *bundlemem)$/;"	f	signature:(struct mmem *bundlemem)
bundle_delete_bundle	bundle.h	/^uint16_t bundle_delete_bundle(struct mmem * bundlemem);$/;"	p	signature:(struct mmem * bundlemem)
bundle_encode_block	bundle.c	/^static int bundle_encode_block(struct bundle_block_t *block, uint8_t *buffer, uint8_t max_len)$/;"	f	file:	signature:(struct bundle_block_t *block, uint8_t *buffer, uint8_t max_len)
bundle_encode_block	bundle.c	/^static int bundle_encode_block(struct bundle_block_t *block, uint8_t *buffer, uint8_t max_len);$/;"	p	file:	signature:(struct bundle_block_t *block, uint8_t *buffer, uint8_t max_len)
bundle_encode_bundle	bundle.c	/^int bundle_encode_bundle(struct mmem *bundlemem, uint8_t *buffer, int max_len)$/;"	f	signature:(struct mmem *bundlemem, uint8_t *buffer, int max_len)
bundle_encode_bundle	bundle.h	/^int bundle_encode_bundle(struct mmem * bundlemem, uint8_t * buffer, int max_len);$/;"	p	signature:(struct mmem * bundlemem, uint8_t * buffer, int max_len)
bundle_flags	storage_coffee.c	/^	uint32_t bundle_flags;$/;"	m	struct:file_list_entry_t	file:	access:public
bundle_get_attr	bundle.c	/^uint8_t bundle_get_attr(struct mmem *bundlemem, uint8_t attr, uint32_t *val)$/;"	f	signature:(struct mmem *bundlemem, uint8_t attr, uint32_t *val)
bundle_get_attr	bundle.h	/^uint8_t bundle_get_attr(struct mmem *bundlemem, uint8_t attr, uint32_t *val);$/;"	p	signature:(struct mmem *bundlemem, uint8_t attr, uint32_t *val)
bundle_get_block	bundle.c	/^struct bundle_block_t *bundle_get_block(struct mmem *bundlemem, uint8_t i)$/;"	f	signature:(struct mmem *bundlemem, uint8_t i)
bundle_get_block	bundle.h	/^struct bundle_block_t * bundle_get_block(struct mmem * bundlemem, uint8_t i);$/;"	p	signature:(struct mmem * bundlemem, uint8_t i)
bundle_get_block_by_type	bundle.c	/^struct bundle_block_t *bundle_get_block_by_type(struct mmem *bundlemem, uint8_t type)$/;"	f	signature:(struct mmem *bundlemem, uint8_t type)
bundle_get_block_by_type	bundle.h	/^struct bundle_block_t * bundle_get_block_by_type(struct mmem * bundlemem, uint8_t type);$/;"	p	signature:(struct mmem * bundlemem, uint8_t type)
bundle_get_payload_block	bundle.c	/^struct bundle_block_t * bundle_get_payload_block(struct mmem * bundlemem) {$/;"	f	signature:(struct mmem * bundlemem)
bundle_get_payload_block	bundle.h	/^struct bundle_block_t * bundle_get_payload_block(struct mmem * bundlemem);$/;"	p	signature:(struct mmem * bundlemem)
bundle_increment	bundle.c	/^int bundle_increment(struct mmem *bundlemem)$/;"	f	signature:(struct mmem *bundlemem)
bundle_increment	bundle.h	/^int bundle_increment(struct mmem *bundlemem);$/;"	p	signature:(struct mmem *bundlemem)
bundle_list	storage_coffee.c	/^LIST(bundle_list);$/;"	v
bundle_list	storage_mmem.c	/^LIST(bundle_list);$/;"	v
bundle_list_changed	storage_coffee.c	/^static uint8_t bundle_list_changed = 0;$/;"	v	file:
bundle_list_entry_t	storage_mmem.c	/^struct bundle_list_entry_t {$/;"	s	file:
bundle_list_entry_t::bundle	storage_mmem.c	/^	struct mmem *bundle;$/;"	m	struct:bundle_list_entry_t	typeref:struct:bundle_list_entry_t::mmem	file:	access:public
bundle_list_entry_t::bundle_num	storage_mmem.c	/^	uint32_t bundle_num;$/;"	m	struct:bundle_list_entry_t	file:	access:public
bundle_list_entry_t::flags	storage_mmem.c	/^	uint8_t flags;$/;"	m	struct:bundle_list_entry_t	file:	access:public
bundle_list_entry_t::next	storage_mmem.c	/^	struct bundle_list_entry_t * next;$/;"	m	struct:bundle_list_entry_t	typeref:struct:bundle_list_entry_t::bundle_list_entry_t	file:	access:public
bundle_num	bundle.h	/^	uint32_t bundle_num;$/;"	m	struct:bundle_t	access:public
bundle_num	custody_basic.c	/^	uint32_t bundle_num;$/;"	m	struct:cust_t	file:	access:public
bundle_num	routing.h	/^	uint32_t bundle_num;$/;"	m	struct:route_t	access:public
bundle_num	storage.h	/^	uint32_t bundle_num;$/;"	m	struct:storage_entry_t	access:public
bundle_num	storage_coffee.c	/^	uint32_t bundle_num;$/;"	m	struct:file_list_entry_t	file:	access:public
bundle_num	storage_mmem.c	/^	uint32_t bundle_num;$/;"	m	struct:bundle_list_entry_t	file:	access:public
bundle_number	convergence_layer.h	/^	uint32_t bundle_number;$/;"	m	struct:transmit_ticket_t	access:public
bundle_number	routing_flooding.c	/^	uint32_t bundle_number;$/;"	m	struct:routing_entry_t	file:	access:public
bundle_recover_bundle	bundle.c	/^struct mmem *bundle_recover_bundle(uint8_t *buffer, int size)$/;"	f	signature:(uint8_t *buffer, int size)
bundle_recover_bundle	bundle.h	/^struct mmem * bundle_recover_bundle(uint8_t * buffer, int size);$/;"	p	signature:(uint8_t * buffer, int size)
bundle_sequence_number	statusreport.h	/^	uint32_t bundle_sequence_number;$/;"	m	struct:__anon4	access:public
bundle_set_attr	bundle.c	/^uint8_t bundle_set_attr(struct mmem *bundlemem, uint8_t attr, uint32_t *val)$/;"	f	signature:(struct mmem *bundlemem, uint8_t attr, uint32_t *val)
bundle_set_attr	bundle.h	/^uint8_t bundle_set_attr(struct mmem *bundlemem, uint8_t attr, uint32_t *val);$/;"	p	signature:(struct mmem *bundlemem, uint8_t attr, uint32_t *val)
bundle_slot_t	bundleslot.h	/^struct bundle_slot_t {$/;"	s
bundle_slot_t::bundle	bundleslot.h	/^	struct mmem bundle;$/;"	m	struct:bundle_slot_t	typeref:struct:bundle_slot_t::mmem	access:public
bundle_slot_t::next	bundleslot.h	/^	struct bundle_slot_t *next;$/;"	m	struct:bundle_slot_t	typeref:struct:bundle_slot_t::bundle_slot_t	access:public
bundle_slot_t::ref	bundleslot.h	/^	uint8_t ref;$/;"	m	struct:bundle_slot_t	access:public
bundle_slot_t::type	bundleslot.h	/^	int type;$/;"	m	struct:bundle_slot_t	access:public
bundle_t	bundle.h	/^struct bundle_t{$/;"	s
bundle_t::app_len	bundle.h	/^	uint32_t app_len;$/;"	m	struct:bundle_t	access:public
bundle_t::block_data	bundle.h	/^	uint8_t block_data[];$/;"	m	struct:bundle_t	access:public
bundle_t::bundle_num	bundle.h	/^	uint32_t bundle_num;$/;"	m	struct:bundle_t	access:public
bundle_t::cust_node	bundle.h	/^	uint32_t cust_node;$/;"	m	struct:bundle_t	access:public
bundle_t::cust_srv	bundle.h	/^	uint32_t cust_srv;$/;"	m	struct:bundle_t	access:public
bundle_t::custody	bundle.h	/^	uint8_t custody;$/;"	m	struct:bundle_t	access:public
bundle_t::debug_time	bundle.h	/^	uint16_t debug_time;$/;"	m	struct:bundle_t	access:public
bundle_t::del_reason	bundle.h	/^	uint8_t del_reason;$/;"	m	struct:bundle_t	access:public
bundle_t::dst_node	bundle.h	/^	uint32_t dst_node;$/;"	m	struct:bundle_t	access:public
bundle_t::dst_srv	bundle.h	/^	uint32_t dst_srv;$/;"	m	struct:bundle_t	access:public
bundle_t::flags	bundle.h	/^	uint32_t flags;$/;"	m	struct:bundle_t	access:public
bundle_t::frag_offs	bundle.h	/^	uint32_t frag_offs;$/;"	m	struct:bundle_t	access:public
bundle_t::lifetime	bundle.h	/^	uint32_t lifetime;$/;"	m	struct:bundle_t	access:public
bundle_t::msrc	bundle.h	/^	rimeaddr_t msrc;$/;"	m	struct:bundle_t	access:public
bundle_t::num_blocks	bundle.h	/^	uint8_t num_blocks;$/;"	m	struct:bundle_t	access:public
bundle_t::rec_time	bundle.h	/^	uint32_t rec_time;$/;"	m	struct:bundle_t	access:public
bundle_t::rep_node	bundle.h	/^	uint32_t rep_node;$/;"	m	struct:bundle_t	access:public
bundle_t::rep_srv	bundle.h	/^	uint32_t rep_srv;$/;"	m	struct:bundle_t	access:public
bundle_t::rssi	bundle.h	/^	packetbuf_attr_t rssi;$/;"	m	struct:bundle_t	access:public
bundle_t::source_process	bundle.h	/^	struct process * source_process;$/;"	m	struct:bundle_t	typeref:struct:bundle_t::process	access:public
bundle_t::src_node	bundle.h	/^	uint32_t src_node;$/;"	m	struct:bundle_t	access:public
bundle_t::src_srv	bundle.h	/^	uint32_t src_srv;$/;"	m	struct:bundle_t	access:public
bundle_t::tstamp	bundle.h	/^	uint32_t tstamp;$/;"	m	struct:bundle_t	access:public
bundle_t::tstamp_seq	bundle.h	/^	uint32_t tstamp_seq;$/;"	m	struct:bundle_t	access:public
bundles_delivered	statistics.h	/^	uint8_t bundles_delivered;$/;"	m	struct:statistics_element_t	access:public
bundles_generated	statistics.h	/^	uint8_t bundles_generated;$/;"	m	struct:statistics_element_t	access:public
bundles_in_storage	storage_coffee.c	/^static uint16_t bundles_in_storage;$/;"	v	file:
bundles_in_storage	storage_mmem.c	/^static uint16_t bundles_in_storage;$/;"	v	file:
bundles_incoming	statistics.h	/^	uint8_t	bundles_incoming;$/;"	m	struct:statistics_element_t	access:public
bundles_outgoing	statistics.h	/^	uint8_t bundles_outgoing;$/;"	m	struct:statistics_element_t	access:public
bundleslot_decrement	bundleslot.c	/^int bundleslot_decrement(struct bundle_slot_t *bs)$/;"	f	signature:(struct bundle_slot_t *bs)
bundleslot_decrement	bundleslot.h	/^int bundleslot_decrement(struct bundle_slot_t *bs);$/;"	p	signature:(struct bundle_slot_t *bs)
bundleslot_free	bundleslot.c	/^void bundleslot_free(struct bundle_slot_t *bs)$/;"	f	signature:(struct bundle_slot_t *bs)
bundleslot_free	bundleslot.h	/^void bundleslot_free(struct bundle_slot_t *bs);$/;"	p	signature:(struct bundle_slot_t *bs)
bundleslot_get_free	bundleslot.c	/^struct bundle_slot_t *bundleslot_get_free()$/;"	f
bundleslot_get_free	bundleslot.h	/^struct bundle_slot_t *bundleslot_get_free();$/;"	p	signature:()
bundleslot_increment	bundleslot.c	/^int bundleslot_increment(struct bundle_slot_t *bs)$/;"	f	signature:(struct bundle_slot_t *bs)
bundleslot_increment	bundleslot.h	/^int bundleslot_increment(struct bundle_slot_t *bs);$/;"	p	signature:(struct bundle_slot_t *bs)
bundleslots	bundleslot.c	/^static struct bundle_slot_t bundleslots[BUNDLE_NUM];$/;"	v	typeref:struct:bundle_slot_t	file:
busy	registration.h	/^	uint8_t busy:1;$/;"	m	struct:registration	access:public
check	redundancy.h	/^	uint8_t (* check)(uint32_t bundle_number);$/;"	m	struct:redundance_check	access:public
check_blocked_neighbours	convergence_layer.c	/^void check_blocked_neighbours() {$/;"	f
contact_element_t	statistics.h	/^struct contact_element_t$/;"	s
contact_element_t::duration	statistics.h	/^	uint16_t duration;$/;"	m	struct:contact_element_t	access:public
contact_element_t::peer	statistics.h	/^	uint8_t peer;$/;"	m	struct:contact_element_t	access:public
contact_element_t::time_difference	statistics.h	/^	uint16_t time_difference;$/;"	m	struct:contact_element_t	access:public
contacts_count	statistics.h	/^	uint8_t contacts_count;$/;"	m	struct:statistics_element_t	access:public
contacts_duration	statistics.h	/^	uint16_t contacts_duration;$/;"	m	struct:statistics_element_t	access:public
contacts_pointer	statistics.c	/^uint8_t contacts_pointer = 0;$/;"	v
contacts_timestamp	statistics.c	/^unsigned long contacts_timestamp = 0;$/;"	v
container_of	bundleslot.h	24;"	d
convergence_layer_backoff	convergence_layer.c	/^struct etimer convergence_layer_backoff;$/;"	v	typeref:struct:etimer
convergence_layer_backoff_pending	convergence_layer.c	/^uint8_t convergence_layer_backoff_pending = 0;$/;"	v
convergence_layer_create_send_ack	convergence_layer.c	/^int convergence_layer_create_send_ack(rimeaddr_t * destination, uint8_t sequence_number, uint8_t type)$/;"	f	signature:(rimeaddr_t * destination, uint8_t sequence_number, uint8_t type)
convergence_layer_delete_bundle	convergence_layer.c	/^int convergence_layer_delete_bundle(uint32_t bundle_number)$/;"	f	signature:(uint32_t bundle_number)
convergence_layer_delete_bundle	convergence_layer.h	/^int convergence_layer_delete_bundle(uint32_t bundle_number);$/;"	p	signature:(uint32_t bundle_number)
convergence_layer_enqueue_bundle	convergence_layer.c	/^int convergence_layer_enqueue_bundle(struct transmit_ticket_t * ticket)$/;"	f	signature:(struct transmit_ticket_t * ticket)
convergence_layer_enqueue_bundle	convergence_layer.h	/^int convergence_layer_enqueue_bundle(struct transmit_ticket_t * ticket);$/;"	p	signature:(struct transmit_ticket_t * ticket)
convergence_layer_free_transmit_ticket	convergence_layer.c	/^int convergence_layer_free_transmit_ticket(struct transmit_ticket_t * ticket)$/;"	f	signature:(struct transmit_ticket_t * ticket)
convergence_layer_free_transmit_ticket	convergence_layer.h	/^int convergence_layer_free_transmit_ticket(struct transmit_ticket_t * ticket);$/;"	p	signature:(struct transmit_ticket_t * ticket)
convergence_layer_get_transmit_ticket	convergence_layer.c	/^struct transmit_ticket_t * convergence_layer_get_transmit_ticket()$/;"	f
convergence_layer_get_transmit_ticket	convergence_layer.h	/^struct transmit_ticket_t * convergence_layer_get_transmit_ticket(void);$/;"	p	signature:(void)
convergence_layer_get_transmit_ticket_priority	convergence_layer.c	/^struct transmit_ticket_t * convergence_layer_get_transmit_ticket_priority(uint8_t priority)$/;"	f	signature:(uint8_t priority)
convergence_layer_incoming_frame	convergence_layer.c	/^int convergence_layer_incoming_frame(rimeaddr_t * source, uint8_t * payload, uint8_t length, packetbuf_attr_t rssi)$/;"	f	signature:(rimeaddr_t * source, uint8_t * payload, uint8_t length, packetbuf_attr_t rssi)
convergence_layer_incoming_frame	convergence_layer.h	/^int convergence_layer_incoming_frame(rimeaddr_t * source, uint8_t * payload, uint8_t length, packetbuf_attr_t rssi);$/;"	p	signature:(rimeaddr_t * source, uint8_t * payload, uint8_t length, packetbuf_attr_t rssi)
convergence_layer_init	convergence_layer.c	/^int convergence_layer_init(void)$/;"	f	signature:(void)
convergence_layer_init	convergence_layer.h	/^int convergence_layer_init(void);$/;"	p	signature:(void)
convergence_layer_is_blocked	convergence_layer.c	/^int convergence_layer_is_blocked(rimeaddr_t * neighbour)$/;"	f	signature:(rimeaddr_t * neighbour)
convergence_layer_is_blocked	convergence_layer.c	/^int convergence_layer_is_blocked(rimeaddr_t * neighbour);$/;"	p	file:	signature:(rimeaddr_t * neighbour)
convergence_layer_neighbour_down	convergence_layer.c	/^int convergence_layer_neighbour_down(rimeaddr_t * neighbour) {$/;"	f	signature:(rimeaddr_t * neighbour)
convergence_layer_neighbour_down	convergence_layer.h	/^int convergence_layer_neighbour_down(rimeaddr_t * neighbour);$/;"	p	signature:(rimeaddr_t * neighbour)
convergence_layer_parse_ackframe	convergence_layer.c	/^int convergence_layer_parse_ackframe(rimeaddr_t * source, uint8_t * payload, uint8_t length, uint8_t sequence_number, uint8_t type)$/;"	f	signature:(rimeaddr_t * source, uint8_t * payload, uint8_t length, uint8_t sequence_number, uint8_t type)
convergence_layer_parse_dataframe	convergence_layer.c	/^int convergence_layer_parse_dataframe(rimeaddr_t * source, uint8_t * payload, uint8_t length, uint8_t flags, uint8_t sequence_number, packetbuf_attr_t rssi)$/;"	f	signature:(rimeaddr_t * source, uint8_t * payload, uint8_t length, uint8_t flags, uint8_t sequence_number, packetbuf_attr_t rssi)
convergence_layer_pending	convergence_layer.c	/^uint8_t convergence_layer_pending;$/;"	v
convergence_layer_process	convergence_layer.h	/^PROCESS_NAME(convergence_layer_process);$/;"	v
convergence_layer_queue	convergence_layer.c	/^int convergence_layer_queue;$/;"	v
convergence_layer_resend_ack	convergence_layer.c	/^int convergence_layer_resend_ack(struct transmit_ticket_t * ticket)$/;"	f	signature:(struct transmit_ticket_t * ticket)
convergence_layer_send_ack	convergence_layer.c	/^int convergence_layer_send_ack(rimeaddr_t * destination, uint8_t sequence_number, uint8_t type, struct transmit_ticket_t * ticket)$/;"	f	signature:(rimeaddr_t * destination, uint8_t sequence_number, uint8_t type, struct transmit_ticket_t * ticket)
convergence_layer_send_bundle	convergence_layer.c	/^int convergence_layer_send_bundle(struct transmit_ticket_t * ticket)$/;"	f	signature:(struct transmit_ticket_t * ticket)
convergence_layer_send_discovery	convergence_layer.c	/^int convergence_layer_send_discovery(uint8_t * payload, uint8_t length, rimeaddr_t * neighbour)$/;"	f	signature:(uint8_t * payload, uint8_t length, rimeaddr_t * neighbour)
convergence_layer_send_discovery	convergence_layer.h	/^int convergence_layer_send_discovery(uint8_t * payload, uint8_t length, rimeaddr_t * neighbour);$/;"	p	signature:(uint8_t * payload, uint8_t length, rimeaddr_t * neighbour)
convergence_layer_set_blocked	convergence_layer.c	/^int convergence_layer_set_blocked(rimeaddr_t * neighbour)$/;"	f	signature:(rimeaddr_t * neighbour)
convergence_layer_set_blocked	convergence_layer.c	/^int convergence_layer_set_blocked(rimeaddr_t * neighbour);$/;"	p	file:	signature:(rimeaddr_t * neighbour)
convergence_layer_set_unblocked	convergence_layer.c	/^int convergence_layer_set_unblocked(rimeaddr_t * neighbour)$/;"	f	signature:(rimeaddr_t * neighbour)
convergence_layer_set_unblocked	convergence_layer.c	/^int convergence_layer_set_unblocked(rimeaddr_t * neighbour);$/;"	p	file:	signature:(rimeaddr_t * neighbour)
convergence_layer_slots	convergence_layer.c	/^int convergence_layer_slots;$/;"	v
convergence_layer_status	convergence_layer.c	/^int convergence_layer_status(void * pointer, uint8_t outcome)$/;"	f	signature:(void * pointer, uint8_t outcome)
convergence_layer_status	convergence_layer.h	/^int convergence_layer_status(void * pointer, uint8_t status);$/;"	p	signature:(void * pointer, uint8_t status)
convergence_layer_transmitting	convergence_layer.c	/^int convergence_layer_transmitting;$/;"	v
convert_eid_to_rime	bundle.c	/^rimeaddr_t convert_eid_to_rime(uint32_t eid) {$/;"	f	signature:(uint32_t eid)
convert_eid_to_rime	bundle.h	/^rimeaddr_t convert_eid_to_rime(uint32_t eid);$/;"	p	signature:(uint32_t eid)
convert_rime_to_eid	bundle.c	/^uint32_t convert_rime_to_eid(rimeaddr_t * dest) {$/;"	f	signature:(rimeaddr_t * dest)
convert_rime_to_eid	bundle.h	/^uint32_t convert_rime_to_eid(rimeaddr_t * dest);$/;"	p	signature:(rimeaddr_t * dest)
counter	routing_flooding.c	/^	uint8_t counter;$/;"	m	struct:blacklist_entry_t	file:	access:public
cust_node	bundle.h	/^	uint32_t cust_node;$/;"	m	struct:bundle_t	access:public
cust_srv	bundle.h	/^	uint32_t cust_srv;$/;"	m	struct:bundle_t	access:public
cust_t	custody_basic.c	/^struct cust_t {$/;"	s	file:
cust_t::bundle_num	custody_basic.c	/^	uint32_t bundle_num;$/;"	m	struct:cust_t	file:	access:public
cust_t::frag_offset	custody_basic.c	/^	uint32_t frag_offset;$/;"	m	struct:cust_t	file:	access:public
cust_t::next	custody_basic.c	/^	struct cust *next;$/;"	m	struct:cust_t	typeref:struct:cust_t::cust	file:	access:public
cust_t::retransmit_in	custody_basic.c	/^	uint16_t retransmit_in;$/;"	m	struct:cust_t	file:	access:public
cust_t::seq_num	custody_basic.c	/^	uint32_t seq_num;$/;"	m	struct:cust_t	file:	access:public
cust_t::src_node	custody_basic.c	/^	uint32_t src_node;$/;"	m	struct:cust_t	file:	access:public
cust_t::timestamp	custody_basic.c	/^	uint32_t timestamp;$/;"	m	struct:cust_t	file:	access:public
custody	bundle.h	/^	uint8_t custody;$/;"	m	struct:bundle_t	access:public
custody_basic	custody_basic.c	/^const struct custody_driver custody_basic ={$/;"	v	typeref:struct:custody_driver
custody_basic_decide	custody_basic.c	/^uint8_t custody_basic_decide(struct mmem *bundlemem, uint32_t * bundle_number)$/;"	f	signature:(struct mmem *bundlemem, uint32_t * bundle_number)
custody_basic_delete_from_list	custody_basic.c	/^void custody_basic_delete_from_list(uint32_t bundle_num)$/;"	f	signature:(uint32_t bundle_num)
custody_basic_init	custody_basic.c	/^void custody_basic_init(void)$/;"	f	signature:(void)
custody_basic_release	custody_basic.c	/^uint8_t custody_basic_release(struct mmem *bundlemem)$/;"	f	signature:(struct mmem *bundlemem)
custody_basic_report	custody_basic.c	/^uint8_t custody_basic_report(struct mmem *bundlemem, uint8_t status)$/;"	f	signature:(struct mmem *bundlemem, uint8_t status)
custody_basic_retransmit	custody_basic.c	/^uint8_t custody_basic_retransmit(struct mmem *bundlemem)$/;"	f	signature:(struct mmem *bundlemem)
custody_driver	custody.h	/^struct custody_driver {$/;"	s
custody_driver::decide	custody.h	/^	uint8_t (* decide)(struct mmem *bundlemem, uint32_t * bundle_number);$/;"	m	struct:custody_driver	access:public
custody_driver::del_from_list	custody.h	/^	void (* del_from_list)(uint32_t bundle_number);$/;"	m	struct:custody_driver	access:public
custody_driver::init	custody.h	/^	void (* init)(void);$/;"	m	struct:custody_driver	access:public
custody_driver::name	custody.h	/^	char *name;$/;"	m	struct:custody_driver	access:public
custody_driver::release	custody.h	/^	uint8_t (* release)(struct mmem *bundlemem);$/;"	m	struct:custody_driver	access:public
custody_driver::report	custody.h	/^	uint8_t (* report)(struct mmem *bundlemem, uint8_t status);$/;"	m	struct:custody_driver	access:public
custody_driver::retransmit	custody.h	/^	uint8_t (* retransmit)(struct mmem *bundlemem);$/;"	m	struct:custody_driver	access:public
custody_null	custody_null.c	/^const struct custody_driver custody_null ={$/;"	v	typeref:struct:custody_driver
custody_null_decide	custody_null.c	/^uint8_t custody_null_decide(struct mmem *bundle, uint32_t * bundle_number)$/;"	f	signature:(struct mmem *bundle, uint32_t * bundle_number)
custody_null_delete_from_list	custody_null.c	/^void custody_null_delete_from_list(uint32_t bundle_num)$/;"	f	signature:(uint32_t bundle_num)
custody_null_init	custody_null.c	/^void custody_null_init(void)$/;"	f	signature:(void)
custody_null_release	custody_null.c	/^uint8_t custody_null_release(struct mmem *bundle)$/;"	f	signature:(struct mmem *bundle)
custody_null_report	custody_null.c	/^uint8_t custody_null_report(struct mmem *bundle, uint8_t status)$/;"	f	signature:(struct mmem *bundle, uint8_t status)
custody_null_retransmit	custody_null.c	/^uint8_t custody_null_retransmit(struct mmem *bundle)$/;"	f	signature:(struct mmem *bundle)
custody_signal	administrative_record.h	/^		custody_signal_t custody_signal; \/** Custody Signal Struct *\/$/;"	m	union:__anon1::__anon2	access:public
custody_signal_copy_eid_to_signal	custody_signal.c	/^void custody_signal_copy_eid_to_signal(struct bundle_t *bundle, custody_signal_t *return_signal) {$/;"	f	signature:(struct bundle_t *bundle, custody_signal_t *return_signal)
custody_signal_copy_timestamp_to_signal	custody_signal.c	/^void custody_signal_copy_timestamp_to_signal (struct bundle_t *bundle , custody_signal_t *return_signal) {$/;"	f	signature:(struct bundle_t *bundle , custody_signal_t *return_signal)
custody_signal_received	custody_signal.c	/^void custody_signal_received(custody_signal_t *custody_signal) {$/;"	f	signature:(custody_signal_t *custody_signal)
custody_signal_set_signal_status	custody_signal.c	/^void custody_signal_set_signal_status (uint8_t reason, uint8_t transfer_result, custody_signal_t *return_signal) {$/;"	f	signature:(uint8_t reason, uint8_t transfer_result, custody_signal_t *return_signal)
custody_signal_set_signal_time	custody_signal.c	/^void custody_signal_set_signal_time(custody_signal_t *return_signal) {$/;"	f	signature:(custody_signal_t *return_signal)
custody_signal_t	custody_signal.h	/^} custody_signal_t;$/;"	t	typeref:struct:__anon3
custody_signal_time	custody_signal.h	/^	uint32_t custody_signal_time;$/;"	m	struct:__anon3	access:public
dead	discovery.h	/^	void (* dead)(rimeaddr_t * destination);$/;"	m	struct:discovery_driver	access:public
debug_time	bundle.h	/^	uint16_t debug_time;$/;"	m	struct:bundle_t	access:public
decide	custody.h	/^	uint8_t (* decide)(struct mmem *bundlemem, uint32_t * bundle_number);$/;"	m	struct:custody_driver	access:public
del_bundle	routing.h	/^	void (* del_bundle)(uint32_t bundle_num);$/;"	m	struct:routing_driver	access:public
del_bundle	storage.h	/^	uint16_t (* del_bundle)(uint32_t bundle_num, uint8_t reason);$/;"	m	struct:storage_driver	access:public
del_from_list	custody.h	/^	void (* del_from_list)(uint32_t bundle_number);$/;"	m	struct:custody_driver	access:public
del_reason	bundle.h	/^	uint8_t del_reason;$/;"	m	struct:bundle_t	access:public
delivery_deliver_bundle	delivery.c	/^int delivery_deliver_bundle(struct mmem *bundlemem) {$/;"	f	signature:(struct mmem *bundlemem)
delivery_deliver_bundle	delivery.h	/^int delivery_deliver_bundle(struct mmem * bundlemem);$/;"	p	signature:(struct mmem * bundlemem)
delivery_unblock_service	delivery.c	/^void delivery_unblock_service(struct mmem * bundlemem) {$/;"	f	signature:(struct mmem * bundlemem)
delivery_unblock_service	delivery.h	/^void delivery_unblock_service(struct mmem * bundlemem);$/;"	p	signature:(struct mmem * bundlemem)
dest	routing.h	/^	rimeaddr_t dest;$/;"	m	struct:route_t	access:public
destination_node	routing_flooding.c	/^	uint32_t destination_node;$/;"	m	struct:routing_entry_t	file:	access:public
disable	discovery.h	/^	void (* disable)();$/;"	m	struct:discovery_driver	access:public
discover	discovery.h	/^	uint8_t (* discover)(rimeaddr_t * dest);$/;"	m	struct:discovery_driver	access:public
discovery_basic	discovery_basic.c	/^const struct discovery_driver discovery_basic = {$/;"	v	typeref:struct:discovery_driver
discovery_basic_disable	discovery_basic.c	/^void discovery_basic_disable()$/;"	f
discovery_basic_discover	discovery_basic.c	/^uint8_t discovery_basic_discover(rimeaddr_t * dest)$/;"	f	signature:(rimeaddr_t * dest)
discovery_basic_enable	discovery_basic.c	/^void discovery_basic_enable()$/;"	f
discovery_basic_init	discovery_basic.c	/^void discovery_basic_init()$/;"	f
discovery_basic_is_beacon	discovery_basic.c	/^uint8_t discovery_basic_is_beacon(uint8_t * msg)$/;"	f	signature:(uint8_t * msg)
discovery_basic_is_discovery	discovery_basic.c	/^uint8_t discovery_basic_is_discovery(uint8_t * msg, rimeaddr_t * dest)$/;"	f	signature:(uint8_t * msg, rimeaddr_t * dest)
discovery_basic_is_neighbour	discovery_basic.c	/^uint8_t discovery_basic_is_neighbour(rimeaddr_t * dest)$/;"	f	signature:(rimeaddr_t * dest)
discovery_basic_list_neighbours	discovery_basic.c	/^struct discovery_neighbour_list_entry * discovery_basic_list_neighbours()$/;"	f
discovery_basic_neighbour_found	discovery_basic.c	/^void discovery_basic_neighbour_found(rimeaddr_t * neighbour)$/;"	f	signature:(rimeaddr_t * neighbour)
discovery_basic_neighbour_found	discovery_basic.c	/^void discovery_basic_neighbour_found(rimeaddr_t * neighbour);$/;"	p	file:	signature:(rimeaddr_t * neighbour)
discovery_basic_neighbour_list_entry	discovery_basic.c	/^struct discovery_basic_neighbour_list_entry {$/;"	s	file:
discovery_basic_neighbour_list_entry	discovery_ipnd.c	/^struct discovery_basic_neighbour_list_entry {$/;"	s	file:
discovery_basic_neighbour_list_entry::active	discovery_basic.c	/^	uint8_t active;$/;"	m	struct:discovery_basic_neighbour_list_entry	file:	access:public
discovery_basic_neighbour_list_entry::active	discovery_ipnd.c	/^	uint8_t active;$/;"	m	struct:discovery_basic_neighbour_list_entry	file:	access:public
discovery_basic_neighbour_list_entry::neighbour	discovery_basic.c	/^	rimeaddr_t neighbour;$/;"	m	struct:discovery_basic_neighbour_list_entry	file:	access:public
discovery_basic_neighbour_list_entry::neighbour	discovery_ipnd.c	/^	rimeaddr_t neighbour;$/;"	m	struct:discovery_basic_neighbour_list_entry	file:	access:public
discovery_basic_neighbour_list_entry::next	discovery_basic.c	/^	struct discovery_basic_neighbour_list_entry *next;$/;"	m	struct:discovery_basic_neighbour_list_entry	typeref:struct:discovery_basic_neighbour_list_entry::discovery_basic_neighbour_list_entry	file:	access:public
discovery_basic_neighbour_list_entry::next	discovery_ipnd.c	/^	struct discovery_basic_neighbour_list_entry *next;$/;"	m	struct:discovery_basic_neighbour_list_entry	typeref:struct:discovery_basic_neighbour_list_entry::discovery_basic_neighbour_list_entry	file:	access:public
discovery_basic_neighbour_list_entry::timestamp	discovery_basic.c	/^	clock_time_t timestamp;$/;"	m	struct:discovery_basic_neighbour_list_entry	file:	access:public
discovery_basic_neighbour_list_entry::timestamp_discovered	discovery_ipnd.c	/^	unsigned long timestamp_discovered;$/;"	m	struct:discovery_basic_neighbour_list_entry	file:	access:public
discovery_basic_neighbour_list_entry::timestamp_last	discovery_ipnd.c	/^	unsigned long timestamp_last;$/;"	m	struct:discovery_basic_neighbour_list_entry	file:	access:public
discovery_basic_receive	discovery_basic.c	/^void discovery_basic_receive(rimeaddr_t * source, uint8_t * payload, uint8_t length)$/;"	f	signature:(rimeaddr_t * source, uint8_t * payload, uint8_t length)
discovery_basic_refresh_neighbour	discovery_basic.c	/^void discovery_basic_refresh_neighbour(rimeaddr_t * neighbour)$/;"	f	signature:(rimeaddr_t * neighbour)
discovery_basic_refresh_neighbour	discovery_basic.c	/^void discovery_basic_refresh_neighbour(rimeaddr_t * neighbour);$/;"	p	file:	signature:(rimeaddr_t * neighbour)
discovery_basic_save_neighbour	discovery_basic.c	/^void discovery_basic_save_neighbour(rimeaddr_t * neighbour)$/;"	f	signature:(rimeaddr_t * neighbour)
discovery_basic_save_neighbour	discovery_basic.c	/^void discovery_basic_save_neighbour(rimeaddr_t * neighbour);$/;"	p	file:	signature:(rimeaddr_t * neighbour)
discovery_basic_send_discovery	discovery_basic.c	/^void discovery_basic_send_discovery(rimeaddr_t * destination)$/;"	f	signature:(rimeaddr_t * destination)
discovery_basic_stop_pending	discovery_basic.c	/^void discovery_basic_stop_pending()$/;"	f
discovery_basic_stop_pending	discovery_basic.c	/^void discovery_basic_stop_pending();$/;"	p	file:
discovery_cycle_timer	discovery_ipnd.c	/^static struct etimer discovery_cycle_timer;$/;"	v	typeref:struct:etimer	file:
discovery_driver	discovery.h	/^struct discovery_driver {$/;"	s
discovery_driver::alive	discovery.h	/^	void (* alive)(rimeaddr_t * source);$/;"	m	struct:discovery_driver	access:public
discovery_driver::dead	discovery.h	/^	void (* dead)(rimeaddr_t * destination);$/;"	m	struct:discovery_driver	access:public
discovery_driver::disable	discovery.h	/^	void (* disable)();$/;"	m	struct:discovery_driver	access:public
discovery_driver::discover	discovery.h	/^	uint8_t (* discover)(rimeaddr_t * dest);$/;"	m	struct:discovery_driver	access:public
discovery_driver::enable	discovery.h	/^	void (* enable)();$/;"	m	struct:discovery_driver	access:public
discovery_driver::init	discovery.h	/^	void (* init)();$/;"	m	struct:discovery_driver	access:public
discovery_driver::is_neighbour	discovery.h	/^	uint8_t (* is_neighbour)(rimeaddr_t * dest);$/;"	m	struct:discovery_driver	access:public
discovery_driver::name	discovery.h	/^	char *name;$/;"	m	struct:discovery_driver	access:public
discovery_driver::neighbours	discovery.h	/^	struct discovery_neighbour_list_entry * (* neighbours)();$/;"	m	struct:discovery_driver	typeref:struct:discovery_driver::neighbours	access:public
discovery_driver::receive	discovery.h	/^	void (* receive)(rimeaddr_t * source, uint8_t * payload, uint8_t length);$/;"	m	struct:discovery_driver	access:public
discovery_driver::stop_pending	discovery.h	/^	void (* stop_pending)();$/;"	m	struct:discovery_driver	access:public
discovery_ipnd	discovery_ipnd.c	/^const struct discovery_driver discovery_ipnd = {$/;"	v	typeref:struct:discovery_driver
discovery_ipnd_delete_neighbour	discovery_ipnd.c	/^void discovery_ipnd_delete_neighbour(rimeaddr_t * neighbour)$/;"	f	signature:(rimeaddr_t * neighbour)
discovery_ipnd_disable	discovery_ipnd.c	/^void discovery_ipnd_disable()$/;"	f
discovery_ipnd_enable	discovery_ipnd.c	/^void discovery_ipnd_enable()$/;"	f
discovery_ipnd_init	discovery_ipnd.c	/^void discovery_ipnd_init()$/;"	f
discovery_ipnd_is_neighbour	discovery_ipnd.c	/^uint8_t discovery_ipnd_is_neighbour(rimeaddr_t * dest)$/;"	f	signature:(rimeaddr_t * dest)
discovery_ipnd_list_neighbours	discovery_ipnd.c	/^struct discovery_neighbour_list_entry * discovery_ipnd_list_neighbours()$/;"	f
discovery_ipnd_parse_bloomfilter	discovery_ipnd.c	/^uint8_t discovery_ipnd_parse_bloomfilter(uint8_t * buffer, uint8_t length) {$/;"	f	signature:(uint8_t * buffer, uint8_t length)
discovery_ipnd_parse_eid	discovery_ipnd.c	/^uint8_t discovery_ipnd_parse_eid(uint32_t * eid, uint8_t * buffer, uint8_t length) {$/;"	f	signature:(uint32_t * eid, uint8_t * buffer, uint8_t length)
discovery_ipnd_parse_service_block	discovery_ipnd.c	/^uint8_t discovery_ipnd_parse_service_block(uint8_t * buffer, uint8_t length) {$/;"	f	signature:(uint8_t * buffer, uint8_t length)
discovery_ipnd_receive	discovery_ipnd.c	/^void discovery_ipnd_receive(rimeaddr_t * source, uint8_t * payload, uint8_t length)$/;"	f	signature:(rimeaddr_t * source, uint8_t * payload, uint8_t length)
discovery_ipnd_refresh_neighbour	discovery_ipnd.c	/^void discovery_ipnd_refresh_neighbour(rimeaddr_t * neighbour)$/;"	f	signature:(rimeaddr_t * neighbour)
discovery_ipnd_refresh_neighbour	discovery_ipnd.c	/^void discovery_ipnd_refresh_neighbour(rimeaddr_t * neighbour);$/;"	p	file:	signature:(rimeaddr_t * neighbour)
discovery_ipnd_save_neighbour	discovery_ipnd.c	/^void discovery_ipnd_save_neighbour(rimeaddr_t * neighbour)$/;"	f	signature:(rimeaddr_t * neighbour)
discovery_ipnd_save_neighbour	discovery_ipnd.c	/^void discovery_ipnd_save_neighbour(rimeaddr_t * neighbour);$/;"	p	file:	signature:(rimeaddr_t * neighbour)
discovery_ipnd_send	discovery_ipnd.c	/^void discovery_ipnd_send() {$/;"	f
discovery_ipnd_stop_pending	discovery_ipnd.c	/^void discovery_ipnd_stop_pending()$/;"	f
discovery_neighbour_list_entry	discovery.h	/^struct discovery_neighbour_list_entry {$/;"	s
discovery_neighbour_list_entry::neighbour	discovery.h	/^	rimeaddr_t neighbour;$/;"	m	struct:discovery_neighbour_list_entry	access:public
discovery_neighbour_list_entry::next	discovery.h	/^	struct discovery_neighbour_list_entry *next;$/;"	m	struct:discovery_neighbour_list_entry	typeref:struct:discovery_neighbour_list_entry::discovery_neighbour_list_entry	access:public
discovery_pending	discovery_basic.c	/^uint8_t discovery_pending = 0;$/;"	v
discovery_pending_start	discovery_basic.c	/^uint8_t discovery_pending_start = 0;$/;"	v
discovery_pending_timer	discovery_basic.c	/^static struct etimer discovery_pending_timer;$/;"	v	typeref:struct:etimer	file:
discovery_process	discovery.h	/^PROCESS_NAME(discovery_process);$/;"	v
discovery_sequencenumber	discovery_ipnd.c	/^uint16_t discovery_sequencenumber = 0;$/;"	v
discovery_static	discovery_static.c	/^const struct discovery_driver discovery_static ={$/;"	v	typeref:struct:discovery_driver
discovery_static_alive	discovery_static.c	/^void discovery_static_alive(rimeaddr_t * source)$/;"	f	signature:(rimeaddr_t * source)
discovery_static_disable	discovery_static.c	/^void discovery_static_disable()$/;"	f
discovery_static_discover	discovery_static.c	/^uint8_t discovery_static_discover(rimeaddr_t * dest)$/;"	f	signature:(rimeaddr_t * dest)
discovery_static_enable	discovery_static.c	/^void discovery_static_enable()$/;"	f
discovery_static_init	discovery_static.c	/^void discovery_static_init()$/;"	f
discovery_static_is_neighbour	discovery_static.c	/^uint8_t discovery_static_is_neighbour(rimeaddr_t * dest)$/;"	f	signature:(rimeaddr_t * dest)
discovery_static_list_neighbours	discovery_static.c	/^struct discovery_neighbour_list_entry * discovery_static_list_neighbours()$/;"	f
discovery_static_receive	discovery_static.c	/^void discovery_static_receive(rimeaddr_t * source, uint8_t * payload, uint8_t length)$/;"	f	signature:(rimeaddr_t * source, uint8_t * payload, uint8_t length)
discovery_static_stop_pending	discovery_static.c	/^void discovery_static_stop_pending()$/;"	f
discovery_status	discovery_basic.c	/^uint8_t discovery_status = 0;$/;"	v
discovery_status	discovery_ipnd.c	/^uint8_t discovery_status = 0;$/;"	v
discovery_timeout_timer	discovery_basic.c	/^static struct etimer discovery_timeout_timer;$/;"	v	typeref:struct:etimer	file:
discovery_timeout_timer	discovery_ipnd.c	/^static struct etimer discovery_timeout_timer;$/;"	v	typeref:struct:etimer	file:
discovery_whitelist	discovery_ipnd.c	/^rimeaddr_t discovery_whitelist[DISCOVERY_IPND_WHITELIST];$/;"	v
dispatching_check_report	dispatching.c	/^int dispatching_check_report(struct mmem * bundlemem) {$/;"	f	signature:(struct mmem * bundlemem)
dispatching_dispatch_bundle	dispatching.c	/^int dispatching_dispatch_bundle(struct mmem *bundlemem) {$/;"	f	signature:(struct mmem *bundlemem)
dispatching_dispatch_bundle	dispatching.h	/^int dispatching_dispatch_bundle(struct mmem * bundlemem);$/;"	p	signature:(struct mmem * bundlemem)
dst_node	bundle.h	/^	uint32_t dst_node;$/;"	m	struct:bundle_t	access:public
dst_srv	bundle.h	/^	uint32_t dst_srv;$/;"	m	struct:bundle_t	access:public
dtn_application_registration_event	api.h	/^process_event_t dtn_application_registration_event;$/;"	v
dtn_application_remove_event	api.h	/^process_event_t dtn_application_remove_event;$/;"	v
dtn_application_status_event	api.h	/^process_event_t dtn_application_status_event;$/;"	v
dtn_beacon_event	dtn_network.h	/^process_event_t dtn_beacon_event;$/;"	v
dtn_bundle_in_storage_event	agent.h	/^process_event_t dtn_bundle_in_storage_event;$/;"	v
dtn_bundle_store_failed	api.h	/^process_event_t dtn_bundle_store_failed;$/;"	v
dtn_bundle_stored	api.h	/^process_event_t dtn_bundle_stored;$/;"	v
dtn_network_driver	dtn_network.c	/^const struct network_driver dtn_network_driver = $/;"	v	typeref:struct:network_driver
dtn_network_get_buffer	dtn_network.c	/^uint8_t * dtn_network_get_buffer()$/;"	f
dtn_network_get_buffer	dtn_network.h	/^uint8_t * dtn_network_get_buffer();$/;"	p	signature:()
dtn_network_get_buffer_length	dtn_network.c	/^uint8_t dtn_network_get_buffer_length() {$/;"	f
dtn_network_get_buffer_length	dtn_network.h	/^uint8_t dtn_network_get_buffer_length();$/;"	p	signature:()
dtn_network_init	dtn_network.c	/^static void dtn_network_init(void) $/;"	f	file:	signature:(void)
dtn_network_input	dtn_network.c	/^static void dtn_network_input(void) $/;"	f	file:	signature:(void)
dtn_network_send	dtn_network.c	/^void dtn_network_send(rimeaddr_t * destination, uint8_t length, void * reference)$/;"	f	signature:(rimeaddr_t * destination, uint8_t length, void * reference)
dtn_network_send	dtn_network.h	/^void dtn_network_send(rimeaddr_t * destination, uint8_t length, void * reference);$/;"	p	signature:(rimeaddr_t * destination, uint8_t length, void * reference)
dtn_network_sent	dtn_network.c	/^static void dtn_network_sent(void * pointer, int status, int num_tx)$/;"	f	file:	signature:(void * pointer, int status, int num_tx)
dtn_node_id	agent.c	/^uint32_t dtn_node_id;$/;"	v
dtn_processing_finished	api.h	/^process_event_t dtn_processing_finished;$/;"	v
dtn_receive_bundle_event	agent.h	/^process_event_t dtn_receive_bundle_event;$/;"	v
dtn_send_admin_record_event	agent.h	/^process_event_t dtn_send_admin_record_event;$/;"	v
dtn_send_bundle_event	api.h	/^process_event_t dtn_send_bundle_event;$/;"	v
dtn_send_bundle_to_node_event	agent.h	/^process_event_t dtn_send_bundle_to_node_event;$/;"	v
dtn_seq_nr	agent.c	/^uint32_t dtn_seq_nr;$/;"	v
dtn_statistics_overrun	statistics.c	/^process_event_t dtn_statistics_overrun;$/;"	v
dtn_time_nanoseconds	statusreport.h	/^	uint32_t dtn_time_nanoseconds;$/;"	m	struct:__anon4	access:public
dtn_time_seconds	statusreport.h	/^	uint32_t dtn_time_seconds;$/;"	m	struct:__anon4	access:public
duration	statistics.h	/^	uint16_t duration;$/;"	m	struct:contact_element_t	access:public
eid_create_full	eid.c	/^int eid_create_full(uint32_t node_id, uint32_t service_id, char * buffer, uint8_t length)$/;"	f	signature:(uint32_t node_id, uint32_t service_id, char * buffer, uint8_t length)
eid_create_full	eid.h	/^int eid_create_full(uint32_t node_id, uint32_t service_id, char * buffer, uint8_t length);$/;"	p	signature:(uint32_t node_id, uint32_t service_id, char * buffer, uint8_t length)
eid_create_full_length	eid.c	/^int eid_create_full_length(uint32_t node_id, uint32_t service_id, uint8_t * buffer, uint8_t length)$/;"	f	signature:(uint32_t node_id, uint32_t service_id, uint8_t * buffer, uint8_t length)
eid_create_full_length	eid.h	/^int eid_create_full_length(uint32_t node_id, uint32_t service_id, uint8_t * buffer, uint8_t length);$/;"	p	signature:(uint32_t node_id, uint32_t service_id, uint8_t * buffer, uint8_t length)
eid_create_host	eid.c	/^int eid_create_host(uint32_t node_id, char * buffer, uint8_t length)$/;"	f	signature:(uint32_t node_id, char * buffer, uint8_t length)
eid_create_host	eid.h	/^int eid_create_host(uint32_t node_id, char * buffer, uint8_t length);$/;"	p	signature:(uint32_t node_id, char * buffer, uint8_t length)
eid_create_host_length	eid.c	/^int eid_create_host_length(uint32_t node_id, uint8_t * buffer, uint8_t length)$/;"	f	signature:(uint32_t node_id, uint8_t * buffer, uint8_t length)
eid_create_host_length	eid.h	/^int eid_create_host_length(uint32_t node_id, uint8_t * buffer, uint8_t length);$/;"	p	signature:(uint32_t node_id, uint8_t * buffer, uint8_t length)
eid_parse_full	eid.c	/^int eid_parse_full(char * buffer, uint8_t length, uint32_t * node_id, uint32_t * service_id)$/;"	f	signature:(char * buffer, uint8_t length, uint32_t * node_id, uint32_t * service_id)
eid_parse_full	eid.h	/^int eid_parse_full(char * buffer, uint8_t length, uint32_t * node_id, uint32_t * service_id);$/;"	p	signature:(char * buffer, uint8_t length, uint32_t * node_id, uint32_t * service_id)
eid_parse_full_length	eid.c	/^int eid_parse_full_length(uint8_t * buffer, uint8_t length, uint32_t * node_id, uint32_t * service_id)$/;"	f	signature:(uint8_t * buffer, uint8_t length, uint32_t * node_id, uint32_t * service_id)
eid_parse_full_length	eid.h	/^int eid_parse_full_length(uint8_t * buffer, uint8_t length, uint32_t * node_id, uint32_t * service_id);$/;"	p	signature:(uint8_t * buffer, uint8_t length, uint32_t * node_id, uint32_t * service_id)
eid_parse_host	eid.c	/^int eid_parse_host(char * buffer, uint8_t length, uint32_t * node_id)$/;"	f	signature:(char * buffer, uint8_t length, uint32_t * node_id)
eid_parse_host	eid.h	/^int eid_parse_host(char * buffer, uint8_t length, uint32_t * node_id);$/;"	p	signature:(char * buffer, uint8_t length, uint32_t * node_id)
eid_parse_host_length	eid.c	/^int eid_parse_host_length(uint8_t * buffer, uint8_t length, uint32_t * node_id)$/;"	f	signature:(uint8_t * buffer, uint8_t length, uint32_t * node_id)
eid_parse_host_length	eid.h	/^int eid_parse_host_length(uint8_t * buffer, uint8_t length, uint32_t * node_id);$/;"	p	signature:(uint8_t * buffer, uint8_t length, uint32_t * node_id)
enable	discovery.h	/^	void (* enable)();$/;"	m	struct:discovery_driver	access:public
entry	routing_flooding.c	/^	struct mmem entry;$/;"	m	struct:routing_list_entry_t	typeref:struct:routing_list_entry_t::mmem	file:	access:public
failed_tries	convergence_layer.h	/^	uint8_t failed_tries;$/;"	m	struct:transmit_ticket_t	access:public
file_list_entry_t	storage_coffee.c	/^struct file_list_entry_t {$/;"	s	file:
file_list_entry_t::bundle_flags	storage_coffee.c	/^	uint32_t bundle_flags;$/;"	m	struct:file_list_entry_t	file:	access:public
file_list_entry_t::bundle_num	storage_coffee.c	/^	uint32_t bundle_num;$/;"	m	struct:file_list_entry_t	file:	access:public
file_list_entry_t::file_size	storage_coffee.c	/^	uint16_t file_size;$/;"	m	struct:file_list_entry_t	file:	access:public
file_list_entry_t::flags	storage_coffee.c	/^	uint8_t flags;$/;"	m	struct:file_list_entry_t	file:	access:public
file_list_entry_t::lifetime	storage_coffee.c	/^	uint32_t lifetime;$/;"	m	struct:file_list_entry_t	file:	access:public
file_list_entry_t::next	storage_coffee.c	/^	struct file_list_entry_t * next;$/;"	m	struct:file_list_entry_t	typeref:struct:file_list_entry_t::file_list_entry_t	file:	access:public
file_list_entry_t::rec_time	storage_coffee.c	/^	uint32_t rec_time;$/;"	m	struct:file_list_entry_t	file:	access:public
file_size	storage_coffee.c	/^	uint16_t file_size;$/;"	m	struct:file_list_entry_t	file:	access:public
flags	bundle.h	/^	uint32_t flags;$/;"	m	struct:bundle_block_t	access:public
flags	bundle.h	/^	uint32_t flags;$/;"	m	struct:bundle_t	access:public
flags	convergence_layer.h	/^	uint8_t flags;$/;"	m	struct:transmit_ticket_t	access:public
flags	routing_flooding.c	/^	uint8_t flags;$/;"	m	struct:routing_entry_t	file:	access:public
flags	storage_coffee.c	/^	uint8_t flags;$/;"	m	struct:file_list_entry_t	file:	access:public
flags	storage_mmem.c	/^	uint8_t flags;$/;"	m	struct:bundle_list_entry_t	file:	access:public
frag_offs	bundle.h	/^	uint32_t frag_offs;$/;"	m	struct:bundle_t	access:public
frag_offset	custody_basic.c	/^	uint32_t frag_offset;$/;"	m	struct:cust_t	file:	access:public
fragement_offset	custody_signal.h	/^	uint32_t fragement_offset;$/;"	m	struct:__anon3	access:public
fragment	statusreport.h	/^	uint8_t fragment;$/;"	m	struct:__anon4	access:public
fragment_length	custody_signal.h	/^	uint32_t fragment_length;$/;"	m	struct:__anon3	access:public
fragment_length	statusreport.h	/^	uint32_t fragment_length;$/;"	m	struct:__anon4	access:public
fragment_offset	statusreport.h	/^	uint32_t fragment_offset;$/;"	m	struct:__anon4	access:public
free_space	storage.h	/^	uint16_t (* free_space)(struct mmem *bundlemem);$/;"	m	struct:storage_driver	access:public
g_store_timer	storage_coffee.c	/^static struct ctimer g_store_timer;$/;"	v	typeref:struct:ctimer	file:
get_bundle_num	storage.h	/^	uint16_t (* get_bundle_num)(void);$/;"	m	struct:storage_driver	access:public
get_bundles	storage.h	/^	struct storage_entry_t * (* get_bundles)(void);$/;"	m	struct:storage_driver	typeref:struct:storage_driver::get_bundles	access:public
hash_buffer	hash.h	/^	uint32_t (* hash_buffer)(uint8_t * buffer, uint16_t length);$/;"	m	struct:hash_driver	access:public
hash_convenience	hash.h	/^	uint32_t (* hash_convenience)(uint32_t one, uint32_t two, uint32_t three, uint32_t four, uint32_t five);$/;"	m	struct:hash_driver	access:public
hash_convenience_ptr	hash.h	/^	uint32_t (* hash_convenience_ptr)(uint32_t * one, uint32_t * two, uint32_t * three, uint32_t * four, uint32_t * five);$/;"	m	struct:hash_driver	access:public
hash_driver	hash.h	/^struct hash_driver {$/;"	s
hash_driver::hash_buffer	hash.h	/^	uint32_t (* hash_buffer)(uint8_t * buffer, uint16_t length);$/;"	m	struct:hash_driver	access:public
hash_driver::hash_convenience	hash.h	/^	uint32_t (* hash_convenience)(uint32_t one, uint32_t two, uint32_t three, uint32_t four, uint32_t five);$/;"	m	struct:hash_driver	access:public
hash_driver::hash_convenience_ptr	hash.h	/^	uint32_t (* hash_convenience_ptr)(uint32_t * one, uint32_t * two, uint32_t * three, uint32_t * four, uint32_t * five);$/;"	m	struct:hash_driver	access:public
hash_driver::init	hash.h	/^	void (* init)(void);$/;"	m	struct:hash_driver	access:public
hash_driver::name	hash.h	/^	char *name;$/;"	m	struct:hash_driver	access:public
hash_xor	hash_xor.c	/^const struct hash_driver hash_xor = {$/;"	v	typeref:struct:hash_driver
hash_xor_buffer	hash_xor.c	/^uint32_t hash_xor_buffer(uint8_t * buffer, uint16_t length)$/;"	f	signature:(uint8_t * buffer, uint16_t length)
hash_xor_convenience	hash_xor.c	/^uint32_t hash_xor_convenience(uint32_t one, uint32_t two, uint32_t three, uint32_t four, uint32_t five)$/;"	f	signature:(uint32_t one, uint32_t two, uint32_t three, uint32_t four, uint32_t five)
hash_xor_convenience_ptr	hash_xor.c	/^uint32_t hash_xor_convenience_ptr(uint32_t * one, uint32_t * two, uint32_t * three, uint32_t * four, uint32_t * five)$/;"	f	signature:(uint32_t * one, uint32_t * two, uint32_t * three, uint32_t * four, uint32_t * five)
hash_xor_init	hash_xor.c	/^void hash_xor_init() {$/;"	f
hash_xxfast	hash_xxfast.c	/^const struct hash_driver hash_xxfast = {$/;"	v	typeref:struct:hash_driver
hash_xxfast_buffer	hash_xxfast.c	/^uint32_t hash_xxfast_buffer(uint8_t * buffer, uint16_t length)$/;"	f	signature:(uint8_t * buffer, uint16_t length)
hash_xxfast_convenience	hash_xxfast.c	/^uint32_t hash_xxfast_convenience(uint32_t one, uint32_t two, uint32_t three, uint32_t four, uint32_t five)$/;"	f	signature:(uint32_t one, uint32_t two, uint32_t three, uint32_t four, uint32_t five)
hash_xxfast_convenience_ptr	hash_xxfast.c	/^uint32_t hash_xxfast_convenience_ptr(uint32_t * one, uint32_t * two, uint32_t * three, uint32_t * four, uint32_t * five)$/;"	f	signature:(uint32_t * one, uint32_t * two, uint32_t * three, uint32_t * four, uint32_t * five)
hash_xxfast_init	hash_xxfast.c	/^void hash_xxfast_init() {$/;"	f
init	custody.h	/^	void (* init)(void);$/;"	m	struct:custody_driver	access:public
init	discovery.h	/^	void (* init)();$/;"	m	struct:discovery_driver	access:public
init	hash.h	/^	void (* init)(void);$/;"	m	struct:hash_driver	access:public
init	redundancy.h	/^	void (* init)(void);$/;"	m	struct:redundance_check	access:public
init	routing.h	/^	void (* init)(void);$/;"	m	struct:routing_driver	access:public
init	storage.h	/^	void (* init)(void);$/;"	m	struct:storage_driver	access:public
inited	bundleslot.c	/^static uint8_t inited = 0;$/;"	v	file:
is_neighbour	discovery.h	/^	uint8_t (* is_neighbour)(rimeaddr_t * dest);$/;"	m	struct:discovery_driver	access:public
lifetime	bundle.h	/^	uint32_t lifetime;$/;"	m	struct:bundle_t	access:public
lifetime	storage_coffee.c	/^	uint32_t lifetime;$/;"	m	struct:file_list_entry_t	file:	access:public
locally_delivered	routing.h	/^	void (* locally_delivered)(struct mmem * bundlemem);$/;"	m	struct:routing_driver	access:public
lock_bundle	storage.h	/^	uint8_t (* lock_bundle)(uint32_t bundle_num);$/;"	m	struct:storage_driver	access:public
msrc	bundle.h	/^	rimeaddr_t msrc;$/;"	m	struct:bundle_t	access:public
name	custody.h	/^	char *name;$/;"	m	struct:custody_driver	access:public
name	discovery.h	/^	char *name;$/;"	m	struct:discovery_driver	access:public
name	hash.h	/^	char *name;$/;"	m	struct:hash_driver	access:public
name	redundancy.h	/^	char *name;$/;"	m	struct:redundance_check	access:public
name	routing.h	/^	char *name;$/;"	m	struct:routing_driver	access:public
name	statusreport.h	/^	char *name;$/;"	m	struct:status_report_driver	access:public
name	storage.h	/^	char *name;$/;"	m	struct:storage_driver	access:public
neighbour	convergence_layer.c	/^	rimeaddr_t neighbour;$/;"	m	struct:blocked_neighbour_t	file:	access:public
neighbour	convergence_layer.h	/^	rimeaddr_t neighbour;$/;"	m	struct:transmit_ticket_t	access:public
neighbour	discovery.h	/^	rimeaddr_t neighbour;$/;"	m	struct:discovery_neighbour_list_entry	access:public
neighbour	discovery_basic.c	/^	rimeaddr_t neighbour;$/;"	m	struct:discovery_basic_neighbour_list_entry	file:	access:public
neighbour	discovery_ipnd.c	/^	rimeaddr_t neighbour;$/;"	m	struct:discovery_basic_neighbour_list_entry	file:	access:public
neighbour_list	discovery_basic.c	/^LIST(neighbour_list);$/;"	v
neighbour_list	discovery_ipnd.c	/^LIST(neighbour_list);$/;"	v
neighbours	discovery.h	/^	struct discovery_neighbour_list_entry * (* neighbours)();$/;"	m	struct:discovery_driver	typeref:struct:discovery_driver::neighbours	access:public
neighbours	routing_flooding.c	/^	rimeaddr_t neighbours[ROUTING_NEI_MEM];$/;"	m	struct:routing_entry_t	file:	access:public
new_bundle	routing.h	/^	int (* new_bundle)(uint32_t * bundle_num);$/;"	m	struct:routing_driver	access:public
new_neighbor	routing.h	/^	void (* new_neighbor)(rimeaddr_t * dest);$/;"	m	struct:routing_driver	access:public
next	bundleslot.h	/^	struct bundle_slot_t *next;$/;"	m	struct:bundle_slot_t	typeref:struct:bundle_slot_t::bundle_slot_t	access:public
next	convergence_layer.c	/^	struct blocked_neighbour_t * next;$/;"	m	struct:blocked_neighbour_t	typeref:struct:blocked_neighbour_t::blocked_neighbour_t	file:	access:public
next	convergence_layer.h	/^	struct transmit_ticket_t * next;$/;"	m	struct:transmit_ticket_t	typeref:struct:transmit_ticket_t::transmit_ticket_t	access:public
next	custody_basic.c	/^	struct cust *next;$/;"	m	struct:cust_t	typeref:struct:cust_t::cust	file:	access:public
next	discovery.h	/^	struct discovery_neighbour_list_entry *next;$/;"	m	struct:discovery_neighbour_list_entry	typeref:struct:discovery_neighbour_list_entry::discovery_neighbour_list_entry	access:public
next	discovery_basic.c	/^	struct discovery_basic_neighbour_list_entry *next;$/;"	m	struct:discovery_basic_neighbour_list_entry	typeref:struct:discovery_basic_neighbour_list_entry::discovery_basic_neighbour_list_entry	file:	access:public
next	discovery_ipnd.c	/^	struct discovery_basic_neighbour_list_entry *next;$/;"	m	struct:discovery_basic_neighbour_list_entry	typeref:struct:discovery_basic_neighbour_list_entry::discovery_basic_neighbour_list_entry	file:	access:public
next	registration.h	/^	struct registration * next;$/;"	m	struct:registration	typeref:struct:registration::registration	access:public
next	routing_flooding.c	/^	struct blacklist_entry_t * next;$/;"	m	struct:blacklist_entry_t	typeref:struct:blacklist_entry_t::blacklist_entry_t	file:	access:public
next	routing_flooding.c	/^	struct routing_list_entry_t * next;$/;"	m	struct:routing_list_entry_t	typeref:struct:routing_list_entry_t::routing_list_entry_t	file:	access:public
next	storage.h	/^	struct storage_entry_t * next;$/;"	m	struct:storage_entry_t	typeref:struct:storage_entry_t::storage_entry_t	access:public
next	storage_coffee.c	/^	struct file_list_entry_t * next;$/;"	m	struct:file_list_entry_t	typeref:struct:file_list_entry_t::file_list_entry_t	file:	access:public
next	storage_mmem.c	/^	struct bundle_list_entry_t * next;$/;"	m	struct:bundle_list_entry_t	typeref:struct:bundle_list_entry_t::bundle_list_entry_t	file:	access:public
node	routing_flooding.c	/^	rimeaddr_t node;$/;"	m	struct:blacklist_entry_t	file:	access:public
node_id	api.h	/^	uint32_t node_id;$/;"	m	struct:registration_api	access:public
node_id	registration.h	/^	uint32_t node_id;$/;"	m	struct:registration	access:public
num_blocks	bundle.h	/^	uint8_t num_blocks;$/;"	m	struct:bundle_t	access:public
outgoing_sequence_number	convergence_layer.c	/^uint8_t outgoing_sequence_number;$/;"	v
payload	bundle.h	/^	uint8_t payload[];$/;"	m	struct:bundle_block_t	access:public
peer	statistics.h	/^	uint8_t peer;$/;"	m	struct:contact_element_t	access:public
r_store_timer	storage_mmem.c	/^static struct ctimer r_store_timer;$/;"	v	typeref:struct:ctimer	file:
read_bundle	storage.h	/^	struct mmem *(* read_bundle)(uint32_t bundle_num);$/;"	m	struct:storage_driver	typeref:struct:storage_driver::read_bundle	access:public
reason_code	statusreport.h	/^	uint8_t reason_code;$/;"	m	struct:__anon4	access:public
rec_time	bundle.h	/^	uint32_t rec_time;$/;"	m	struct:bundle_t	access:public
rec_time	storage_coffee.c	/^	uint32_t rec_time;$/;"	m	struct:file_list_entry_t	file:	access:public
receive	discovery.h	/^	void (* receive)(rimeaddr_t * source, uint8_t * payload, uint8_t length);$/;"	m	struct:discovery_driver	access:public
received_from_node	routing_flooding.c	/^	rimeaddr_t received_from_node;$/;"	m	struct:routing_entry_t	file:	access:public
record_status	administrative_record.h	/^	uint8_t record_status; 		\/** 8 bit, 4 bit Record Type Code, 4 bit Record Flags *\/$/;"	m	struct:__anon1	access:public
redundance_bundle_active	redundancy_basic.c	/^uint8_t redundance_bundle_active[REDUNDANCE_MAX];$/;"	v
redundance_bundle_list	redundancy_basic.c	/^uint32_t redundance_bundle_list[REDUNDANCE_MAX];$/;"	v
redundance_bundle_list_pointer	redundancy_basic.c	/^uint8_t redundance_bundle_list_pointer;$/;"	v
redundance_check	redundancy.h	/^struct redundance_check {$/;"	s
redundance_check::check	redundancy.h	/^	uint8_t (* check)(uint32_t bundle_number);$/;"	m	struct:redundance_check	access:public
redundance_check::init	redundancy.h	/^	void (* init)(void);$/;"	m	struct:redundance_check	access:public
redundance_check::name	redundancy.h	/^	char *name;$/;"	m	struct:redundance_check	access:public
redundance_check::set	redundancy.h	/^	uint8_t (* set)(uint32_t bundle_number);$/;"	m	struct:redundance_check	access:public
redundance_counter	redundancy_bloomfilter.c	/^uint8_t redundance_counter = 0;$/;"	v
redundance_filters	redundancy_bloomfilter.c	/^char redundance_filters[REDUNDANCE_SIZE];$/;"	v
redundance_pointer	redundancy_bloomfilter.c	/^uint8_t redundance_pointer = 0;$/;"	v
redundancy_basic	redundancy_basic.c	/^const struct redundance_check redundancy_basic ={$/;"	v	typeref:struct:redundance_check
redundancy_basic_check	redundancy_basic.c	/^uint8_t redundancy_basic_check(uint32_t bundle_number)$/;"	f	signature:(uint32_t bundle_number)
redundancy_basic_init	redundancy_basic.c	/^void redundancy_basic_init(void)$/;"	f	signature:(void)
redundancy_basic_set	redundancy_basic.c	/^uint8_t redundancy_basic_set(uint32_t bundle_number)$/;"	f	signature:(uint32_t bundle_number)
redundancy_bloomfilter	redundancy_bloomfilter.c	/^const struct redundance_check redundancy_bloomfilter ={$/;"	v	typeref:struct:redundance_check
redundancy_bloomfilter_check	redundancy_bloomfilter.c	/^uint8_t redundancy_bloomfilter_check(uint32_t bundle_number)$/;"	f	signature:(uint32_t bundle_number)
redundancy_bloomfilter_init	redundancy_bloomfilter.c	/^void redundancy_bloomfilter_init(void)$/;"	f	signature:(void)
redundancy_bloomfilter_set	redundancy_bloomfilter.c	/^uint8_t redundancy_bloomfilter_set(uint32_t bundle_number)$/;"	f	signature:(uint32_t bundle_number)
ref	bundleslot.h	/^	uint8_t ref;$/;"	m	struct:bundle_slot_t	access:public
reg_list	registration.h	/^list_t reg_list;$/;"	v
registration	registration.h	/^struct registration {$/;"	s
registration::app_id	registration.h	/^	uint32_t app_id;$/;"	m	struct:registration	access:public
registration::application_process	registration.h	/^	struct process * application_process;$/;"	m	struct:registration	typeref:struct:registration::process	access:public
registration::busy	registration.h	/^	uint8_t busy:1;$/;"	m	struct:registration	access:public
registration::next	registration.h	/^	struct registration * next;$/;"	m	struct:registration	typeref:struct:registration::registration	access:public
registration::node_id	registration.h	/^	uint32_t node_id;$/;"	m	struct:registration	access:public
registration::status	registration.h	/^	uint8_t status:1;$/;"	m	struct:registration	access:public
registration_api	api.h	/^struct registration_api {$/;"	s
registration_api::app_id	api.h	/^	uint32_t app_id;$/;"	m	struct:registration_api	access:public
registration_api::application_process	api.h	/^	struct process *application_process;$/;"	m	struct:registration_api	typeref:struct:registration_api::process	access:public
registration_api::node_id	api.h	/^	uint32_t node_id;$/;"	m	struct:registration_api	access:public
registration_api::status	api.h	/^	uint8_t status:1;$/;"	m	struct:registration_api	access:public
registration_get_application_id	registration.c	/^uint32_t registration_get_application_id(struct process * application_process)$/;"	f	signature:(struct process * application_process)
registration_get_application_id	registration.h	/^uint32_t registration_get_application_id(struct process * application_process);$/;"	p	signature:(struct process * application_process)
registration_get_process	registration.c	/^struct process * registration_get_process(uint32_t app_id, uint32_t node_id)$/;"	f	signature:(uint32_t app_id, uint32_t node_id)
registration_get_process	registration.h	/^struct process * registration_get_process(uint32_t app_id, uint32_t node_id);$/;"	p	signature:(uint32_t app_id, uint32_t node_id)
registration_init	registration.c	/^void registration_init(void)$/;"	f	signature:(void)
registration_init	registration.h	/^void registration_init(void);$/;"	p	signature:(void)
registration_is_local	registration.c	/^uint8_t registration_is_local(uint32_t app_id, uint32_t node_id)$/;"	f	signature:(uint32_t app_id, uint32_t node_id)
registration_is_local	registration.h	/^uint8_t registration_is_local(uint32_t app_id, uint32_t node_id);$/;"	p	signature:(uint32_t app_id, uint32_t node_id)
registration_list	registration.c	/^LIST(registration_list);$/;"	v
registration_new_application	registration.c	/^int registration_new_application(uint32_t app_id, struct process *application_process, uint32_t node_id)$/;"	f	signature:(uint32_t app_id, struct process *application_process, uint32_t node_id)
registration_new_application	registration.h	/^int registration_new_application(uint32_t app_id, struct process * application_process, uint32_t node_id);$/;"	p	signature:(uint32_t app_id, struct process * application_process, uint32_t node_id)
registration_remove_application	registration.c	/^void registration_remove_application(uint32_t app_id, uint32_t node_id)$/;"	f	signature:(uint32_t app_id, uint32_t node_id)
registration_remove_application	registration.h	/^void registration_remove_application(uint32_t app_id, uint32_t node_id);$/;"	p	signature:(uint32_t app_id, uint32_t node_id)
registration_return_status	registration.c	/^int registration_return_status(uint32_t app_id, uint32_t node_id)$/;"	f	signature:(uint32_t app_id, uint32_t node_id)
registration_return_status	registration.h	/^int registration_return_status(uint32_t app_id, uint32_t node_id);$/;"	p	signature:(uint32_t app_id, uint32_t node_id)
registration_set_active	registration.c	/^int registration_set_active(uint32_t app_id, uint32_t node_id) {$/;"	f	signature:(uint32_t app_id, uint32_t node_id)
registration_set_active	registration.h	/^int registration_set_active(uint32_t app_id, uint32_t node_id);$/;"	p	signature:(uint32_t app_id, uint32_t node_id)
registration_set_passive	registration.c	/^int registration_set_passive(uint32_t app_id, uint32_t node_id)$/;"	f	signature:(uint32_t app_id, uint32_t node_id)
registration_set_passive	registration.h	/^int registration_set_passive(uint32_t app_id, uint32_t node_id);$/;"	p	signature:(uint32_t app_id, uint32_t node_id)
reinit	storage.h	/^	void (* reinit)(void);$/;"	m	struct:storage_driver	access:public
release	custody.h	/^	uint8_t (* release)(struct mmem *bundlemem);$/;"	m	struct:custody_driver	access:public
rep_node	bundle.h	/^	uint32_t rep_node;$/;"	m	struct:bundle_t	access:public
rep_srv	bundle.h	/^	uint32_t rep_srv;$/;"	m	struct:bundle_t	access:public
report	custody.h	/^	uint8_t (* report)(struct mmem *bundlemem, uint8_t status);$/;"	m	struct:custody_driver	access:public
resubmit_bundles	routing.h	/^	void (* resubmit_bundles)();$/;"	m	struct:routing_driver	access:public
retransmit	custody.h	/^	uint8_t (* retransmit)(struct mmem *bundlemem);$/;"	m	struct:custody_driver	access:public
retransmit	custody_basic.c	/^void retransmit();$/;"	p	file:
retransmit_in	custody_basic.c	/^	uint16_t retransmit_in;$/;"	m	struct:cust_t	file:	access:public
route_t	routing.h	/^struct route_t	{$/;"	s
route_t::bundle_num	routing.h	/^	uint32_t bundle_num;$/;"	m	struct:route_t	access:public
route_t::dest	routing.h	/^	rimeaddr_t dest;$/;"	m	struct:route_t	access:public
routing_driver	routing.h	/^struct routing_driver {$/;"	s
routing_driver::del_bundle	routing.h	/^	void (* del_bundle)(uint32_t bundle_num);$/;"	m	struct:routing_driver	access:public
routing_driver::init	routing.h	/^	void (* init)(void);$/;"	m	struct:routing_driver	access:public
routing_driver::locally_delivered	routing.h	/^	void (* locally_delivered)(struct mmem * bundlemem);$/;"	m	struct:routing_driver	access:public
routing_driver::name	routing.h	/^	char *name;$/;"	m	struct:routing_driver	access:public
routing_driver::new_bundle	routing.h	/^	int (* new_bundle)(uint32_t * bundle_num);$/;"	m	struct:routing_driver	access:public
routing_driver::new_neighbor	routing.h	/^	void (* new_neighbor)(rimeaddr_t * dest);$/;"	m	struct:routing_driver	access:public
routing_driver::resubmit_bundles	routing.h	/^	void (* resubmit_bundles)();$/;"	m	struct:routing_driver	access:public
routing_driver::sent	routing.h	/^	void (* sent)(struct transmit_ticket_t * ticket, uint8_t status);$/;"	m	struct:routing_driver	access:public
routing_entry_t	routing_flooding.c	/^struct routing_entry_t {$/;"	s	file:
routing_entry_t::bundle_number	routing_flooding.c	/^	uint32_t bundle_number;$/;"	m	struct:routing_entry_t	file:	access:public
routing_entry_t::destination_node	routing_flooding.c	/^	uint32_t destination_node;$/;"	m	struct:routing_entry_t	file:	access:public
routing_entry_t::flags	routing_flooding.c	/^	uint8_t flags;$/;"	m	struct:routing_entry_t	file:	access:public
routing_entry_t::neighbours	routing_flooding.c	/^	rimeaddr_t neighbours[ROUTING_NEI_MEM];$/;"	m	struct:routing_entry_t	file:	access:public
routing_entry_t::received_from_node	routing_flooding.c	/^	rimeaddr_t received_from_node;$/;"	m	struct:routing_entry_t	file:	access:public
routing_entry_t::send_to	routing_flooding.c	/^	uint8_t send_to;$/;"	m	struct:routing_entry_t	file:	access:public
routing_entry_t::source_node	routing_flooding.c	/^	uint32_t source_node;$/;"	m	struct:routing_entry_t	file:	access:public
routing_flooding	routing_flooding.c	/^const struct routing_driver routing_flooding ={$/;"	v	typeref:struct:routing_driver
routing_flooding_blacklist_add	routing_flooding.c	/^int routing_flooding_blacklist_add(rimeaddr_t * neighbour)$/;"	f	signature:(rimeaddr_t * neighbour)
routing_flooding_blacklist_delete	routing_flooding.c	/^void routing_flooding_blacklist_delete(rimeaddr_t * neighbour)$/;"	f	signature:(rimeaddr_t * neighbour)
routing_flooding_bundle_delivered_locally	routing_flooding.c	/^void routing_flooding_bundle_delivered_locally(struct mmem * bundlemem) {$/;"	f	signature:(struct mmem * bundlemem)
routing_flooding_bundle_sent	routing_flooding.c	/^void routing_flooding_bundle_sent(struct transmit_ticket_t * ticket, uint8_t status)$/;"	f	signature:(struct transmit_ticket_t * ticket, uint8_t status)
routing_flooding_check_keep_bundle	routing_flooding.c	/^void routing_flooding_check_keep_bundle(uint32_t bundle_number) {$/;"	f	signature:(uint32_t bundle_number)
routing_flooding_check_keep_bundle	routing_flooding.c	/^void routing_flooding_check_keep_bundle(uint32_t bundle_number);$/;"	p	file:	signature:(uint32_t bundle_number)
routing_flooding_delete_bundle	routing_flooding.c	/^void routing_flooding_delete_bundle(uint32_t bundle_number)$/;"	f	signature:(uint32_t bundle_number)
routing_flooding_forward_directly	routing_flooding.c	/^int routing_flooding_forward_directly(struct routing_entry_t * entry)$/;"	f	signature:(struct routing_entry_t * entry)
routing_flooding_forward_normal	routing_flooding.c	/^int routing_flooding_forward_normal(struct routing_entry_t * entry)$/;"	f	signature:(struct routing_entry_t * entry)
routing_flooding_init	routing_flooding.c	/^void routing_flooding_init(void)$/;"	f	signature:(void)
routing_flooding_new_bundle	routing_flooding.c	/^int routing_flooding_new_bundle(uint32_t * bundle_number)$/;"	f	signature:(uint32_t * bundle_number)
routing_flooding_new_neighbour	routing_flooding.c	/^void routing_flooding_new_neighbour(rimeaddr_t *dest)$/;"	f	signature:(rimeaddr_t *dest)
routing_flooding_resubmit_bundles	routing_flooding.c	/^void routing_flooding_resubmit_bundles() {$/;"	f
routing_flooding_schedule_resubmission	routing_flooding.c	/^void routing_flooding_schedule_resubmission(void)$/;"	f	signature:(void)
routing_flooding_send_bundle	routing_flooding.c	/^int routing_flooding_send_bundle(uint32_t bundle_number, rimeaddr_t * neighbour)$/;"	f	signature:(uint32_t bundle_number, rimeaddr_t * neighbour)
routing_flooding_send_to_known_neighbours	routing_flooding.c	/^void routing_flooding_send_to_known_neighbours(void)$/;"	f	signature:(void)
routing_flooding_send_to_known_neighbours	routing_flooding.c	/^void routing_flooding_send_to_known_neighbours(void);$/;"	p	file:	signature:(void)
routing_flooding_send_to_local	routing_flooding.c	/^int routing_flooding_send_to_local(struct routing_entry_t * entry)$/;"	f	signature:(struct routing_entry_t * entry)
routing_list	routing_flooding.c	/^LIST(routing_list);$/;"	v
routing_list_entry_t	routing_flooding.c	/^struct routing_list_entry_t {$/;"	s	file:
routing_list_entry_t::entry	routing_flooding.c	/^	struct mmem entry;$/;"	m	struct:routing_list_entry_t	typeref:struct:routing_list_entry_t::mmem	file:	access:public
routing_list_entry_t::next	routing_flooding.c	/^	struct routing_list_entry_t * next;$/;"	m	struct:routing_list_entry_t	typeref:struct:routing_list_entry_t::routing_list_entry_t	file:	access:public
routing_process	routing.h	/^PROCESS_NAME(routing_process);$/;"	v
rssi	bundle.h	/^	packetbuf_attr_t rssi;$/;"	m	struct:bundle_t	access:public
save_bundle	storage.h	/^	uint8_t (* save_bundle)(struct mmem *bundlemem, uint32_t ** bundle_number);$/;"	m	struct:storage_driver	access:public
sdnv_decode	sdnv.c	/^int sdnv_decode(const uint8_t* bp, size_t len, uint32_t* val)$/;"	f	signature:(const uint8_t* bp, size_t len, uint32_t* val)
sdnv_decode	sdnv.h	/^int sdnv_decode(const uint8_t * bp, size_t len, uint32_t * val);$/;"	p	signature:(const uint8_t * bp, size_t len, uint32_t * val)
sdnv_decode2	sdnv.h	61;"	d
sdnv_encode	sdnv.c	/^int sdnv_encode(uint32_t val, uint8_t* bp, size_t len)$/;"	f	signature:(uint32_t val, uint8_t* bp, size_t len)
sdnv_encode	sdnv.h	/^int sdnv_encode(uint32_t val, uint8_t * bp, size_t len);$/;"	p	signature:(uint32_t val, uint8_t * bp, size_t len)
sdnv_encoding_len	sdnv.c	/^size_t sdnv_encoding_len(uint32_t val)$/;"	f	signature:(uint32_t val)
sdnv_encoding_len	sdnv.h	/^size_t sdnv_encoding_len(uint32_t val);$/;"	p	signature:(uint32_t val)
sdnv_len	sdnv.c	/^size_t sdnv_len(const uint8_t* bp)$/;"	f	signature:(const uint8_t* bp)
sdnv_len	sdnv.h	/^size_t sdnv_len(const uint8_t * bp);$/;"	p	signature:(const uint8_t * bp)
sdnv_t	sdnv.h	/^typedef uint8_t * sdnv_t;$/;"	t
send	statusreport.h	/^	uint8_t (* send)(struct mmem * bundlemem, uint8_t status, uint8_t reason);$/;"	m	struct:status_report_driver	access:public
send_to	routing_flooding.c	/^	uint8_t send_to;$/;"	m	struct:routing_entry_t	file:	access:public
sent	routing.h	/^	void (* sent)(struct transmit_ticket_t * ticket, uint8_t status);$/;"	m	struct:routing_driver	access:public
seq_num	custody_basic.c	/^	uint32_t seq_num;$/;"	m	struct:cust_t	file:	access:public
sequence_number	convergence_layer.h	/^	uint8_t sequence_number;$/;"	m	struct:transmit_ticket_t	access:public
set	redundancy.h	/^	uint8_t (* set)(uint32_t bundle_number);$/;"	m	struct:redundance_check	access:public
slots_in_use	bundleslot.c	/^static uint8_t slots_in_use = 0;$/;"	v	file:
source_eid_node	statusreport.h	/^	uint32_t source_eid_node;$/;"	m	struct:__anon4	access:public
source_eid_service	statusreport.h	/^	uint32_t source_eid_service;$/;"	m	struct:__anon4	access:public
source_node	routing_flooding.c	/^	uint32_t source_node;$/;"	m	struct:routing_entry_t	file:	access:public
source_process	bundle.h	/^	struct process * source_process;$/;"	m	struct:bundle_t	typeref:struct:bundle_t::process	access:public
src_app	custody_signal.h	/^	uint32_t src_app;$/;"	m	struct:__anon3	access:public
src_node	bundle.h	/^	uint32_t src_node;$/;"	m	struct:bundle_t	access:public
src_node	custody_basic.c	/^	uint32_t src_node;$/;"	m	struct:cust_t	file:	access:public
src_node	custody_signal.h	/^	uint32_t src_node;$/;"	m	struct:__anon3	access:public
src_srv	bundle.h	/^	uint32_t src_srv;$/;"	m	struct:bundle_t	access:public
statistics_array	statistics.c	/^struct statistics_element_t statistics_array[STATISTICS_ELEMENTS];$/;"	v	typeref:struct:statistics_element_t
statistics_bundle_delivered	statistics.c	/^void statistics_bundle_delivered(uint8_t count)$/;"	f	signature:(uint8_t count)
statistics_bundle_delivered	statistics.h	/^void statistics_bundle_delivered(uint8_t count);$/;"	p	signature:(uint8_t count)
statistics_bundle_generated	statistics.c	/^void statistics_bundle_generated(uint8_t count)$/;"	f	signature:(uint8_t count)
statistics_bundle_generated	statistics.h	/^void statistics_bundle_generated(uint8_t count);$/;"	p	signature:(uint8_t count)
statistics_bundle_incoming	statistics.c	/^void statistics_bundle_incoming(uint8_t count)$/;"	f	signature:(uint8_t count)
statistics_bundle_incoming	statistics.h	/^void statistics_bundle_incoming(uint8_t count);$/;"	p	signature:(uint8_t count)
statistics_bundle_outgoing	statistics.c	/^void statistics_bundle_outgoing(uint8_t count)$/;"	f	signature:(uint8_t count)
statistics_bundle_outgoing	statistics.h	/^void statistics_bundle_outgoing(uint8_t count);$/;"	p	signature:(uint8_t count)
statistics_contacts	statistics.c	/^struct contact_element_t statistics_contacts[STATISTICS_CONTACTS];$/;"	v	typeref:struct:contact_element_t
statistics_contacts_down	statistics.c	/^void statistics_contacts_down(rimeaddr_t * peer, uint16_t duration)$/;"	f	signature:(rimeaddr_t * peer, uint16_t duration)
statistics_contacts_down	statistics.h	/^void statistics_contacts_down(rimeaddr_t * peer, uint16_t duration);$/;"	p	signature:(rimeaddr_t * peer, uint16_t duration)
statistics_contacts_up	statistics.c	/^void statistics_contacts_up(rimeaddr_t * peer)$/;"	f	signature:(rimeaddr_t * peer)
statistics_contacts_up	statistics.h	/^void statistics_contacts_up(rimeaddr_t * peer);$/;"	p	signature:(rimeaddr_t * peer)
statistics_element_t	statistics.h	/^struct statistics_element_t$/;"	s
statistics_element_t::bundles_delivered	statistics.h	/^	uint8_t bundles_delivered;$/;"	m	struct:statistics_element_t	access:public
statistics_element_t::bundles_generated	statistics.h	/^	uint8_t bundles_generated;$/;"	m	struct:statistics_element_t	access:public
statistics_element_t::bundles_incoming	statistics.h	/^	uint8_t	bundles_incoming;$/;"	m	struct:statistics_element_t	access:public
statistics_element_t::bundles_outgoing	statistics.h	/^	uint8_t bundles_outgoing;$/;"	m	struct:statistics_element_t	access:public
statistics_element_t::contacts_count	statistics.h	/^	uint8_t contacts_count;$/;"	m	struct:statistics_element_t	access:public
statistics_element_t::contacts_duration	statistics.h	/^	uint16_t contacts_duration;$/;"	m	struct:statistics_element_t	access:public
statistics_element_t::storage_bundles	statistics.h	/^	uint8_t storage_bundles;$/;"	m	struct:statistics_element_t	access:public
statistics_element_t::storage_memory	statistics.h	/^	uint16_t storage_memory;$/;"	m	struct:statistics_element_t	access:public
statistics_event_process	statistics.c	/^struct process * statistics_event_process = NULL;$/;"	v	typeref:struct:process
statistics_get_bundle	statistics.c	/^uint8_t statistics_get_bundle(uint8_t * buffer, uint8_t maximum_length)$/;"	f	signature:(uint8_t * buffer, uint8_t maximum_length)
statistics_get_bundle	statistics.h	/^uint8_t statistics_get_bundle(uint8_t * buffer, uint8_t maximum_length);$/;"	p	signature:(uint8_t * buffer, uint8_t maximum_length)
statistics_get_contacts_bundle	statistics.c	/^uint8_t statistics_get_contacts_bundle(uint8_t * buffer, uint8_t maximum_length)$/;"	f	signature:(uint8_t * buffer, uint8_t maximum_length)
statistics_get_contacts_bundle	statistics.h	/^uint8_t statistics_get_contacts_bundle(uint8_t * buffer, uint8_t maximum_length);$/;"	p	signature:(uint8_t * buffer, uint8_t maximum_length)
statistics_get_pointer	statistics.c	/^uint8_t statistics_get_pointer()$/;"	f
statistics_reset	statistics.c	/^void statistics_reset(void)$/;"	f	signature:(void)
statistics_reset	statistics.h	/^void statistics_reset(void);$/;"	p	signature:(void)
statistics_reset_contacts	statistics.c	/^void statistics_reset_contacts()$/;"	f
statistics_reset_contacts	statistics.h	/^void statistics_reset_contacts();$/;"	p	signature:()
statistics_setup	statistics.c	/^uint16_t statistics_setup(struct process * process)$/;"	f	signature:(struct process * process)
statistics_setup	statistics.h	/^uint16_t statistics_setup();$/;"	p	signature:()
statistics_storage_bundles	statistics.c	/^void statistics_storage_bundles(uint8_t bundles)$/;"	f	signature:(uint8_t bundles)
statistics_storage_bundles	statistics.h	/^void statistics_storage_bundles(uint8_t bundles);$/;"	p	signature:(uint8_t bundles)
statistics_storage_memory	statistics.c	/^void statistics_storage_memory(uint16_t free)$/;"	f	signature:(uint16_t free)
statistics_storage_memory	statistics.h	/^void statistics_storage_memory(uint16_t free);$/;"	p	signature:(uint16_t free)
statistics_timestamp	statistics.c	/^unsigned long statistics_timestamp = 0;$/;"	v
status	api.h	/^	uint8_t status:1;$/;"	m	struct:registration_api	access:public
status	custody_signal.h	/^	uint8_t status; $/;"	m	struct:__anon3	access:public
status	registration.h	/^	uint8_t status:1;$/;"	m	struct:registration	access:public
status_flags	statusreport.h	/^	uint8_t status_flags;$/;"	m	struct:__anon4	access:public
status_report	administrative_record.h	/^		status_report_t status_report; $/;"	m	union:__anon1::__anon2	access:public
status_report_driver	statusreport.h	/^struct status_report_driver {$/;"	s
status_report_driver::name	statusreport.h	/^	char *name;$/;"	m	struct:status_report_driver	access:public
status_report_driver::send	statusreport.h	/^	uint8_t (* send)(struct mmem * bundlemem, uint8_t status, uint8_t reason);$/;"	m	struct:status_report_driver	access:public
status_report_t	statusreport.h	/^} status_report_t;$/;"	t	typeref:struct:__anon4
statusreport_basic	statusreport_basic.c	/^const struct status_report_driver statusreport_basic = {$/;"	v	typeref:struct:status_report_driver
statusreport_basic_send	statusreport_basic.c	/^uint8_t statusreport_basic_send(struct mmem * bundlemem, uint8_t status, uint8_t reason)$/;"	f	signature:(struct mmem * bundlemem, uint8_t status, uint8_t reason)
statusreport_decode	statusreport.h	/^int statusreport_decode(status_report_t * report, uint8_t * buffer, uint8_t length);$/;"	p	signature:(status_report_t * report, uint8_t * buffer, uint8_t length)
statusreport_decode	statusreport_basic.c	/^int statusreport_decode(status_report_t * report, uint8_t * buffer, uint8_t length)$/;"	f	signature:(status_report_t * report, uint8_t * buffer, uint8_t length)
statusreport_encode	statusreport.h	/^int statusreport_encode(status_report_t * report, uint8_t * buffer, uint8_t length);$/;"	p	signature:(status_report_t * report, uint8_t * buffer, uint8_t length)
statusreport_encode	statusreport_basic.c	/^int statusreport_encode(status_report_t * report, uint8_t * buffer, uint8_t length)$/;"	f	signature:(status_report_t * report, uint8_t * buffer, uint8_t length)
stop_pending	discovery.h	/^	void (* stop_pending)();$/;"	m	struct:discovery_driver	access:public
storage_bundles	statistics.h	/^	uint8_t storage_bundles;$/;"	m	struct:statistics_element_t	access:public
storage_coffee	storage_coffee.c	/^const struct storage_driver storage_coffee = {$/;"	v	typeref:struct:storage_driver
storage_coffee_delete_bundle	storage_coffee.c	/^uint16_t storage_coffee_delete_bundle(uint32_t bundle_number, uint8_t reason)$/;"	f	signature:(uint32_t bundle_number, uint8_t reason)
storage_coffee_delete_bundle	storage_coffee.c	/^uint16_t storage_coffee_delete_bundle(uint32_t bundle_number, uint8_t reason);$/;"	p	file:	signature:(uint32_t bundle_number, uint8_t reason)
storage_coffee_get_bundle_numbers	storage_coffee.c	/^uint16_t storage_coffee_get_bundle_numbers(void){$/;"	f	signature:(void)
storage_coffee_get_bundles	storage_coffee.c	/^struct storage_entry_t * storage_coffee_get_bundles(void)$/;"	f	signature:(void)
storage_coffee_get_free_space	storage_coffee.c	/^uint16_t storage_coffee_get_free_space(struct mmem * bundlemem)$/;"	f	signature:(struct mmem * bundlemem)
storage_coffee_init	storage_coffee.c	/^void storage_coffee_init(void)$/;"	f	signature:(void)
storage_coffee_lock_bundle	storage_coffee.c	/^uint8_t storage_coffee_lock_bundle(uint32_t bundle_num)$/;"	f	signature:(uint32_t bundle_num)
storage_coffee_make_room	storage_coffee.c	/^uint8_t storage_coffee_make_room(struct mmem * bundlemem)$/;"	f	signature:(struct mmem * bundlemem)
storage_coffee_prune	storage_coffee.c	/^void storage_coffee_prune()$/;"	f
storage_coffee_prune	storage_coffee.c	/^void storage_coffee_prune();$/;"	p	file:
storage_coffee_read_bundle	storage_coffee.c	/^struct mmem * storage_coffee_read_bundle(uint32_t bundle_number)$/;"	f	signature:(uint32_t bundle_number)
storage_coffee_read_bundle	storage_coffee.c	/^struct mmem * storage_coffee_read_bundle(uint32_t bundle_number);$/;"	p	file:	signature:(uint32_t bundle_number)
storage_coffee_reconstruct_bundles	storage_coffee.c	/^void storage_coffee_reconstruct_bundles()$/;"	f
storage_coffee_reconstruct_bundles	storage_coffee.c	/^void storage_coffee_reconstruct_bundles();$/;"	p	file:
storage_coffee_reinit	storage_coffee.c	/^void storage_coffee_reinit(void)$/;"	f	signature:(void)
storage_coffee_save_bundle	storage_coffee.c	/^uint8_t storage_coffee_save_bundle(struct mmem * bundlemem, uint32_t ** bundle_number_ptr)$/;"	f	signature:(struct mmem * bundlemem, uint32_t ** bundle_number_ptr)
storage_coffee_unlock_bundle	storage_coffee.c	/^void storage_coffee_unlock_bundle(uint32_t bundle_num)$/;"	f	signature:(uint32_t bundle_num)
storage_driver	storage.h	/^struct storage_driver {$/;"	s
storage_driver::del_bundle	storage.h	/^	uint16_t (* del_bundle)(uint32_t bundle_num, uint8_t reason);$/;"	m	struct:storage_driver	access:public
storage_driver::free_space	storage.h	/^	uint16_t (* free_space)(struct mmem *bundlemem);$/;"	m	struct:storage_driver	access:public
storage_driver::get_bundle_num	storage.h	/^	uint16_t (* get_bundle_num)(void);$/;"	m	struct:storage_driver	access:public
storage_driver::get_bundles	storage.h	/^	struct storage_entry_t * (* get_bundles)(void);$/;"	m	struct:storage_driver	typeref:struct:storage_driver::get_bundles	access:public
storage_driver::init	storage.h	/^	void (* init)(void);$/;"	m	struct:storage_driver	access:public
storage_driver::lock_bundle	storage.h	/^	uint8_t (* lock_bundle)(uint32_t bundle_num);$/;"	m	struct:storage_driver	access:public
storage_driver::name	storage.h	/^	char *name;$/;"	m	struct:storage_driver	access:public
storage_driver::read_bundle	storage.h	/^	struct mmem *(* read_bundle)(uint32_t bundle_num);$/;"	m	struct:storage_driver	typeref:struct:storage_driver::read_bundle	access:public
storage_driver::reinit	storage.h	/^	void (* reinit)(void);$/;"	m	struct:storage_driver	access:public
storage_driver::save_bundle	storage.h	/^	uint8_t (* save_bundle)(struct mmem *bundlemem, uint32_t ** bundle_number);$/;"	m	struct:storage_driver	access:public
storage_driver::unlock_bundle	storage.h	/^	void (* unlock_bundle)(uint32_t bundle_num);$/;"	m	struct:storage_driver	access:public
storage_entry_t	storage.h	/^struct storage_entry_t {$/;"	s
storage_entry_t::bundle_num	storage.h	/^	uint32_t bundle_num;$/;"	m	struct:storage_entry_t	access:public
storage_entry_t::next	storage.h	/^	struct storage_entry_t * next;$/;"	m	struct:storage_entry_t	typeref:struct:storage_entry_t::storage_entry_t	access:public
storage_memory	statistics.h	/^	uint16_t storage_memory;$/;"	m	struct:statistics_element_t	access:public
storage_mmem	storage_mmem.c	/^const struct storage_driver storage_mmem = {$/;"	v	typeref:struct:storage_driver
storage_mmem_delete_bundle	storage_mmem.c	/^uint16_t storage_mmem_delete_bundle(uint32_t bundle_number, uint8_t reason)$/;"	f	signature:(uint32_t bundle_number, uint8_t reason)
storage_mmem_delete_bundle	storage_mmem.c	/^uint16_t storage_mmem_delete_bundle(uint32_t bundle_number, uint8_t reason);$/;"	p	file:	signature:(uint32_t bundle_number, uint8_t reason)
storage_mmem_get_bundle_numbers	storage_mmem.c	/^uint16_t storage_mmem_get_bundle_numbers(void){$/;"	f	signature:(void)
storage_mmem_get_bundles	storage_mmem.c	/^struct storage_entry_t * storage_mmem_get_bundles(void)$/;"	f	signature:(void)
storage_mmem_get_free_space	storage_mmem.c	/^uint16_t storage_mmem_get_free_space(struct mmem * bundlemem)$/;"	f	signature:(struct mmem * bundlemem)
storage_mmem_init	storage_mmem.c	/^void storage_mmem_init(void)$/;"	f	signature:(void)
storage_mmem_lock_bundle	storage_mmem.c	/^uint8_t storage_mmem_lock_bundle(uint32_t bundle_num)$/;"	f	signature:(uint32_t bundle_num)
storage_mmem_make_room	storage_mmem.c	/^uint8_t storage_mmem_make_room(struct mmem * bundlemem)$/;"	f	signature:(struct mmem * bundlemem)
storage_mmem_prune	storage_mmem.c	/^void storage_mmem_prune()$/;"	f
storage_mmem_prune	storage_mmem.c	/^void storage_mmem_prune();$/;"	p	file:
storage_mmem_read_bundle	storage_mmem.c	/^struct mmem *storage_mmem_read_bundle(uint32_t bundle_num)$/;"	f	signature:(uint32_t bundle_num)
storage_mmem_reinit	storage_mmem.c	/^void storage_mmem_reinit(void)$/;"	f	signature:(void)
storage_mmem_reinit	storage_mmem.c	/^void storage_mmem_reinit(void);$/;"	p	file:	signature:(void)
storage_mmem_save_bundle	storage_mmem.c	/^uint8_t storage_mmem_save_bundle(struct mmem * bundlemem, uint32_t ** bundle_number_ptr)$/;"	f	signature:(struct mmem * bundlemem, uint32_t ** bundle_number_ptr)
storage_mmem_unlock_bundle	storage_mmem.c	/^void storage_mmem_unlock_bundle(uint32_t bundle_num)$/;"	f	signature:(uint32_t bundle_num)
storage_mmem_update_statistics	storage_mmem.c	/^void storage_mmem_update_statistics() {$/;"	f
storage_mmem_update_statistics	storage_mmem.c	/^void storage_mmem_update_statistics();$/;"	p	file:
submit_data_to_application_event	api.h	/^process_event_t submit_data_to_application_event;$/;"	v
time_difference	statistics.h	/^	uint16_t time_difference;$/;"	m	struct:contact_element_t	access:public
timestamp	convergence_layer.c	/^	clock_time_t timestamp;$/;"	m	struct:blocked_neighbour_t	file:	access:public
timestamp	convergence_layer.h	/^	clock_time_t timestamp;$/;"	m	struct:transmit_ticket_t	access:public
timestamp	custody_basic.c	/^	uint32_t timestamp;$/;"	m	struct:cust_t	file:	access:public
timestamp	discovery_basic.c	/^	clock_time_t timestamp;$/;"	m	struct:discovery_basic_neighbour_list_entry	file:	access:public
timestamp	routing_flooding.c	/^	clock_time_t timestamp;$/;"	m	struct:blacklist_entry_t	file:	access:public
timestamp_discovered	discovery_ipnd.c	/^	unsigned long timestamp_discovered;$/;"	m	struct:discovery_basic_neighbour_list_entry	file:	access:public
timestamp_last	discovery_ipnd.c	/^	unsigned long timestamp_last;$/;"	m	struct:discovery_basic_neighbour_list_entry	file:	access:public
transmission_ticket_list	convergence_layer.c	/^LIST(transmission_ticket_list);$/;"	v
transmit_ticket_t	convergence_layer.h	/^struct transmit_ticket_t {$/;"	s
transmit_ticket_t::bundle	convergence_layer.h	/^	struct mmem * bundle;$/;"	m	struct:transmit_ticket_t	typeref:struct:transmit_ticket_t::mmem	access:public
transmit_ticket_t::bundle_number	convergence_layer.h	/^	uint32_t bundle_number;$/;"	m	struct:transmit_ticket_t	access:public
transmit_ticket_t::failed_tries	convergence_layer.h	/^	uint8_t failed_tries;$/;"	m	struct:transmit_ticket_t	access:public
transmit_ticket_t::flags	convergence_layer.h	/^	uint8_t flags;$/;"	m	struct:transmit_ticket_t	access:public
transmit_ticket_t::neighbour	convergence_layer.h	/^	rimeaddr_t neighbour;$/;"	m	struct:transmit_ticket_t	access:public
transmit_ticket_t::next	convergence_layer.h	/^	struct transmit_ticket_t * next;$/;"	m	struct:transmit_ticket_t	typeref:struct:transmit_ticket_t::transmit_ticket_t	access:public
transmit_ticket_t::sequence_number	convergence_layer.h	/^	uint8_t sequence_number;$/;"	m	struct:transmit_ticket_t	access:public
transmit_ticket_t::timestamp	convergence_layer.h	/^	clock_time_t timestamp;$/;"	m	struct:transmit_ticket_t	access:public
transmit_ticket_t::tries	convergence_layer.h	/^	uint8_t tries;$/;"	m	struct:transmit_ticket_t	access:public
tries	convergence_layer.h	/^	uint8_t tries;$/;"	m	struct:transmit_ticket_t	access:public
tstamp	bundle.h	/^	uint32_t tstamp;$/;"	m	struct:bundle_t	access:public
tstamp_seq	bundle.h	/^	uint32_t tstamp_seq;$/;"	m	struct:bundle_t	access:public
type	bundle.h	/^	uint8_t type;$/;"	m	struct:bundle_block_t	access:public
type	bundleslot.h	/^	int type;$/;"	m	struct:bundle_slot_t	access:public
unlock_bundle	storage.h	/^	void (* unlock_bundle)(uint32_t bundle_num);$/;"	m	struct:storage_driver	access:public
